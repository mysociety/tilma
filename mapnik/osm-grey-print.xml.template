<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE Map [
<!ENTITY % entities SYSTEM "%(mysociety_path)s/mapnik/inc/entities.xml.inc">
%entities;
<!ENTITY placename_labels SYSTEM "mapumental-placename_labels.xml.inc">
]>
<Map srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over" background-color="rgb(152,188,218)" minimum-version="0.7.2">
    <FontSet name="bold-fonts">
        <Font face-name="DejaVu Sans Bold"/>
    </FontSet>
    <FontSet name="book-fonts">
        <Font face-name="DejaVu Sans Book"/>
    </FontSet>
    <FontSet name="oblique-fonts">
        <Font face-name="DejaVu Sans Oblique"/>
    </FontSet>

    <Style name="access">
        <Rule>
            <Filter>(([access]='permissive') and ((([highway]='unclassified') or ([highway]='residential')) or ([highway]='footway')))</Filter>
            &minscale_zoom15;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke-opacity="0.5" stroke="rgb(204,255,153)" stroke-linecap="round" stroke-dasharray="6, 8" stroke-width="6"/></Rule>
        <Rule>
            <Filter>(([access]='permissive') and (([highway]='service') and not (([service]='INT-minor'))))</Filter>
            &minscale_zoom15;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke-opacity="0.5" stroke="rgb(204,255,153)" stroke-linecap="round" stroke-dasharray="6, 8" stroke-width="3"/></Rule>
        <Rule>
            <Filter>(([access]='permissive') and (((([highway]='unclassified') or ([highway]='residential')) or ([highway]='footway')) or ([highway]='service')))</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke-linejoin="round" stroke-opacity="0.5" stroke="rgb(204,255,153)" stroke-linecap="round" stroke-dasharray="6, 8" stroke-width="6"/></Rule>
        <Rule>
            <Filter>(([access]='destination') and (([highway]='unclassified') or ([highway]='residential')))</Filter>
            &minscale_zoom15;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke-opacity="0.5" stroke="rgb(194,224,255)" stroke-linecap="round" stroke-dasharray="6, 8" stroke-width="6"/></Rule>
        <Rule>
            <Filter>(([access]='destination') and (([highway]='service') and not (([service]='INT-minor'))))</Filter>
            &minscale_zoom15;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke-opacity="0.5" stroke="rgb(194,224,255)" stroke-linecap="round" stroke-dasharray="6, 8" stroke-width="3"/></Rule>
        <Rule>
            <Filter>(([access]='destination') and ((([highway]='unclassified') or ([highway]='residential')) or ([highway]='service')))</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke-linejoin="round" stroke-opacity="0.5" stroke="rgb(194,224,255)" stroke-linecap="round" stroke-dasharray="6, 8" stroke-width="6"/></Rule>
        <Rule>
            <Filter>((([access]='private') or ([access]='no')) and not (([highway]='service')))</Filter>
            &minscale_zoom15;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke-opacity="0.5" stroke="rgb(239,169,169)" stroke-linecap="round" stroke-dasharray="6, 8" stroke-width="6"/></Rule>
        <Rule>
            <Filter>((([access]='private') or ([access]='no')) and (([highway]='service') and not (([service]='INT-minor'))))</Filter>
            &minscale_zoom15;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke-opacity="0.5" stroke="rgb(239,169,169)" stroke-linecap="round" stroke-dasharray="6, 8" stroke-width="3"/></Rule>
        <Rule>
            <Filter>(([access]='private') or ([access]='no'))</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke-linejoin="round" stroke-opacity="0.5" stroke="rgb(239,169,169)" stroke-linecap="round" stroke-dasharray="6, 8" stroke-width="6"/></Rule>
    </Style>
    <Style name="area-text">
        <Rule>
            <Filter>([way_area]&gt;=150000)</Filter>
            &maxscale_zoom14;
            <TextSymbolizer size="10" fill="rgb(0,0,51)" fontset-name="book-fonts" halo-radius="1" wrap-width="20">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([way_area]&gt;=80000) and ([way_area]&lt;150000))</Filter>
            &maxscale_zoom15;
            <TextSymbolizer size="10" fill="rgb(0,0,51)" fontset-name="book-fonts" halo-radius="1" wrap-width="20">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([way_area]&gt;=20000) and ([way_area]&lt;80000))</Filter>
            &maxscale_zoom16;
            <TextSymbolizer size="10" fill="rgb(0,0,51)" fontset-name="book-fonts" halo-radius="1" wrap-width="20">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([way_area]&lt;20000)</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="10" fill="rgb(0,0,51)" fontset-name="book-fonts" halo-radius="1" wrap-width="20">[name]</TextSymbolizer>
        </Rule>
    </Style>
    <Style name="barriers">
        <Rule>
            <Filter>([barrier]='embankment')</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(68,68,68)" stroke-width="0.4"/></Rule>
        <Rule>
            <Filter>(([natural]='hedge') or ([barrier]='hedge'))</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke="rgb(174,209,160)" stroke-width="3"/></Rule>
        <Rule>
            <Filter>(([barrier]&lt;&gt;'') and not ((([barrier]='hedge') or ([barrier]='embankment'))))</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke="rgb(68,68,68)" stroke-width="0.4"/></Rule>
    </Style>
    <Style name="barriers_area">
        <Rule>
            <Filter>(([natural]='hedge') or ([barrier]='hedge'))</Filter>
            &maxscale_zoom16;
            <PolygonSymbolizer fill="rgb(174,209,160)"/></Rule>
        <Rule>
            <Filter>(([barrier]&lt;&gt;'') and not (([barrier]='hedge')))</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke="rgb(68,68,68)" stroke-width="0.4"/></Rule>
    </Style>
    <Style name="boundary">
        <Rule>
            &minscale_zoom9;
            &maxscale_zoom7;
            <PolygonSymbolizer fill-opacity="0.05" fill="rgb(0,128,0)"/><LineSymbolizer stroke="rgb(0,128,0)" stroke-width="1.5" stroke-dasharray="4, 2" stroke-opacity="0.15"/></Rule>
        <Rule>
            &minscale_zoom12;
            &maxscale_zoom10;
            <PolygonSymbolizer fill-opacity="0.05" fill="rgb(0,128,0)"/><LineSymbolizer stroke="rgb(0,128,0)" stroke-width="3" stroke-dasharray="6, 2" stroke-opacity="0.15"/></Rule>
        <Rule>
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(0,128,0)" stroke-width="3" stroke-dasharray="6, 2" stroke-opacity="0.15"/></Rule>
    </Style>
    <Style name="bridges_casing">
        <Rule>
            <Filter>(([highway]='motorway') or ([highway]='motorway_link'))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke="rgb(42,42,43)" stroke-width="3"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway') or ([highway]='motorway_link'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-width="6.5"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway') or ([highway]='motorway_link'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-width="9"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway') or ([highway]='motorway_link'))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-width="12"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') or ([highway]='trunk_link'))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-width="4"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') or ([highway]='trunk_link'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-width="5"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') or ([highway]='trunk_link'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-width="11"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') or ([highway]='trunk_link'))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-width="16"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') or ([highway]='primary_link'))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke="rgb(42,42,42)" stroke-width="4"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') or ([highway]='primary_link'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-width="5"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') or ([highway]='primary_link'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-width="11"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') or ([highway]='primary_link'))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-width="16"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary') or ([highway]='secondary_link'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-width="5"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary') or ([highway]='secondary_link'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-width="12"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary') or ([highway]='secondary_link'))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-width="16"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary') or ([highway]='tertiary_link'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke-width="5"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary') or ([highway]='tertiary_link'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-width="11"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary') or ([highway]='tertiary_link'))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-width="16"/></Rule>
        <Rule>
            <Filter>((([highway]='residential') or ([highway]='unclassified')) or ([highway]='road'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke-width="4.5"/></Rule>
        <Rule>
            <Filter>((([highway]='residential') or ([highway]='unclassified')) or ([highway]='road'))</Filter>
            &minscale_zoom15;
            &maxscale_zoom15;
            <LineSymbolizer stroke-width="9"/></Rule>
        <Rule>
            <Filter>((([highway]='residential') or ([highway]='unclassified')) or ([highway]='road'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom16;
            <LineSymbolizer stroke-width="11"/></Rule>
        <Rule>
            <Filter>((([highway]='residential') or ([highway]='unclassified')) or ([highway]='road'))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-width="16"/></Rule>
        <Rule>
            <Filter>([highway]='service')</Filter>
            &minscale_zoom15;
            &maxscale_zoom14;
            <LineSymbolizer stroke-width="3"/></Rule>
        <Rule>
            <Filter>([highway]='service')</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke-width="8"/></Rule>
        <Rule>
            <Filter>([highway]='pedestrian')</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke-width="2.2"/></Rule>
        <Rule>
            <Filter>([highway]='pedestrian')</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke-width="3.8"/></Rule>
        <Rule>
            <Filter>([highway]='pedestrian')</Filter>
            &minscale_zoom15;
            &maxscale_zoom15;
            <LineSymbolizer stroke-width="7"/></Rule>
        <Rule>
            <Filter>([highway]='pedestrian')</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke-width="9.5"/></Rule>
        <Rule>
            <Filter>([aeroway]='runway')</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-width="19"/></Rule>
        <Rule>
            <Filter>([aeroway]='taxiway')</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke-width="5"/></Rule>
        <Rule>
            <Filter>([aeroway]='taxiway')</Filter>
            &maxscale_zoom15;
            <LineSymbolizer stroke-width="7"/></Rule>
        <Rule>
            <Filter>([railway]='subway')</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-width="5.5"/></Rule>
        <Rule>
            <Filter>(([railway]='light_rail') or ([railway]='narrow_gauge'))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(85,85,85)" stroke-width="5.5"/></Rule>
        <Rule>
            <Filter>([highway]='unsurfaced')</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke-width="5"/></Rule>
        <Rule>
            <Filter>([highway]='unsurfaced')</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-width="6.5"/></Rule>
        <Rule>
            <Filter>(([highway]='bridleway') or (([highway]='path') and ([horse]='designated')))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-width="5.5"/></Rule>
        <Rule>
            <Filter>(([highway]='footway') or (([highway]='path') and ([foot]='designated')))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-width="6"/></Rule>
        <Rule>
            <Filter>(([highway]='path') and not (((([bicycle]='designated') or ([foot]='designated')) or ([horse]='designated'))))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-width="4"/></Rule>
        <Rule>
            <Filter>(([highway]='cycleway') or (([highway]='path') and ([bicycle]='designated')))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-width="5.5"/></Rule>
        <Rule>
            <Filter>([highway]='byway')</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-width="5.5"/></Rule>
        <Rule>
            <Filter>([railway]='rail')</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke-width="6.5"/></Rule>
        <Rule>
            <Filter>([railway]='INT-spur-siding-yard')</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke-width="5.7"/></Rule>
        <Rule>
            <Filter>(((([railway]='disused') or ([railway]='abandoned')) or ([railway]='construction')) and not (([highway]&lt;&gt;'')))</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke-width="6"/></Rule>
        <Rule>
            <Filter>(([highway]='track') and ([tracktype]='grade1'))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-width="5"/></Rule>
        <Rule>
            <Filter>(([highway]='track') and ([tracktype]='grade2'))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-width="4.5"/></Rule>
        <Rule>
            <Filter>(([highway]='track') and ([tracktype]='grade3'))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-width="4.5"/></Rule>
        <Rule>
            <Filter>(([highway]='track') and ([tracktype]='grade4'))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-width="4.5"/></Rule>
        <Rule>
            <Filter>(([highway]='track') and ([tracktype]='grade5'))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-width="4.5"/></Rule>
        <Rule>
            <Filter>(([highway]='track') and not (([tracktype]&lt;&gt;'')))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-width="4.5"/></Rule>
    </Style>
    <Style name="bridges_casing2">
        <Rule>
            <Filter>([railway]='subway')</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="4"/></Rule>
        <Rule>
            <Filter>(([railway]='light_rail') or ([railway]='narrow_gauge'))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="4"/></Rule>
        <Rule>
            <Filter>([highway]='unsurfaced')</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='unsurfaced')</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='bridleway') or (([highway]='path') and ([horse]='designated')))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='footway') or (([highway]='path') and ([foot]='designated')))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="4.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='path') and not (((([bicycle]='designated') or ([foot]='designated')) or ([horse]='designated'))))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="2.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='cycleway') or (([highway]='path') and ([bicycle]='designated')))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='byway')</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([railway]='rail')</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="5"/></Rule>
        <Rule>
            <Filter>([railway]='INT-spur-siding-yard')</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="4"/></Rule>
        <Rule>
            <Filter>(((([railway]='disused') or ([railway]='abandoned')) or ([railway]='construction')) and not (([highway]&lt;&gt;'')))</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="4.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='track') and ([tracktype]='grade1'))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3.5"/></Rule>
        <Rule>
            <Filter>(([highway]='track') and ([tracktype]='grade2'))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="3" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='track') and ([tracktype]='grade3'))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="3.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='track') and ([tracktype]='grade4'))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="3" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='track') and ([tracktype]='grade5'))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="3" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='track') and not (([tracktype]&lt;&gt;'')))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="3" stroke-linecap="round"/></Rule>
    </Style>
    <Style name="bridges_fill">
        <Rule>
            <Filter>(([highway]='motorway') or ([highway]='motorway_link'))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,78)" stroke-width="2" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway') or ([highway]='motorway_link'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,78)" stroke-width="5.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway') or ([highway]='motorway_link'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,78)" stroke-width="7.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway') or ([highway]='motorway_link'))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,78)" stroke-width="10" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') or ([highway]='trunk_link'))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="3" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') or ([highway]='trunk_link'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') or ([highway]='trunk_link'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="9.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') or ([highway]='trunk_link'))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="14.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') or ([highway]='primary_link'))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="3" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') or ([highway]='primary_link'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') or ([highway]='primary_link'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="9.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') or ([highway]='primary_link'))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="14.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary') or ([highway]='secondary_link'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary') or ([highway]='secondary_link'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="10.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary') or ([highway]='secondary_link'))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="14.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary') or ([highway]='tertiary_link'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary') or ([highway]='tertiary_link'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="9.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary') or ([highway]='tertiary_link'))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="14" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='road')</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(221,221,221)" stroke-width="3.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='road')</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(221,221,221)" stroke-width="9.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='road')</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(221,221,221)" stroke-width="14" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='residential') or ([highway]='unclassified'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="3.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='residential') or ([highway]='unclassified'))</Filter>
            &minscale_zoom15;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="7.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='residential') or ([highway]='unclassified'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom16;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="9.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='residential') or ([highway]='unclassified'))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="14" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='service')</Filter>
            &minscale_zoom15;
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="2" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='service')</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="6" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='pedestrian')</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(237,237,237)" stroke-width="1.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='pedestrian')</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(237,237,237)" stroke-width="3" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='pedestrian')</Filter>
            &minscale_zoom15;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(237,237,237)" stroke-width="5.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='pedestrian')</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(237,237,237)" stroke-width="8" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([aeroway]='runway')</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(187,187,204)" stroke-width="18"/></Rule>
        <Rule>
            <Filter>([aeroway]='taxiway')</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(187,187,204)" stroke-width="4"/></Rule>
        <Rule>
            <Filter>([aeroway]='taxiway')</Filter>
            &maxscale_zoom15;
            <LineSymbolizer stroke="rgb(187,187,204)" stroke-width="6"/></Rule>
        <Rule>
            <Filter>([railway]='subway')</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="2"/></Rule>
        <Rule>
            <Filter>(([railway]='light_rail') or ([railway]='narrow_gauge'))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(102,102,102)" stroke-width="2"/></Rule>
        <Rule>
            <Filter>([highway]='unsurfaced')</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke-dasharray="2, 4" stroke="rgb(222,189,156)" stroke-width="3" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='unsurfaced')</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke-dasharray="4, 6" stroke="rgb(222,189,156)" stroke-width="4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='bridleway') or (([highway]='path') and ([horse]='designated')))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(0,128,0)" stroke-width="1.5" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>(([highway]='footway') or (([highway]='path') and ([foot]='designated')))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke-dasharray="1, 3" stroke="rgb(153,153,153)" stroke-width="2" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='path') and not (((([bicycle]='designated') or ([foot]='designated')) or ([horse]='designated'))))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke-dasharray="6, 3" stroke-width="0.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='cycleway') or (([highway]='path') and ([bicycle]='designated')))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke-dasharray="1, 3" stroke="rgb(102,102,102)" stroke-width="1.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='byway')</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke-dasharray="3, 4" stroke="rgb(255,204,0)" stroke-width="1.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([railway]='rail')</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(153,153,153)" stroke-width="3"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-dasharray="8, 12"/></Rule>
        <Rule>
            <Filter>([railway]='rail')</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(153,153,153)" stroke-width="3"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-dasharray="0, 11, 8, 1"/></Rule>
        <Rule>
            <Filter>([railway]='INT-spur-siding-yard')</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(153,153,153)" stroke-width="2"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="0.8" stroke-dasharray="0, 8, 11, 1"/></Rule>
        <Rule>
            <Filter>(((([railway]='disused') or ([railway]='abandoned')) or ([railway]='construction')) and not (([highway]&lt;&gt;'')))</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(128,128,128)" stroke-width="2" stroke-dasharray="2, 4"/></Rule>
        <Rule>
            <Filter>(([highway]='track') and ([tracktype]='grade1'))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(179,119,0)" stroke-width="2" stroke-opacity="0.7"/></Rule>
        <Rule>
            <Filter>(([highway]='track') and ([tracktype]='grade2'))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke-opacity="0.8" stroke="rgb(168,112,0)" stroke-linecap="round" stroke-dasharray="3, 4" stroke-width="1.5"/></Rule>
        <Rule>
            <Filter>(([highway]='track') and ([tracktype]='grade3'))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(153,153,153)" stroke-width="2" stroke-linecap="round" stroke-opacity="0.7"/></Rule>
        <Rule>
            <Filter>(([highway]='track') and ([tracktype]='grade4'))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke-opacity="0.8" stroke="rgb(153,153,153)" stroke-linecap="round" stroke-dasharray="4, 7, 1, 5" stroke-width="2"/></Rule>
        <Rule>
            <Filter>(([highway]='track') and ([tracktype]='grade5'))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke-opacity="0.8" stroke="rgb(153,153,153)" stroke-linecap="round" stroke-dasharray="1, 5" stroke-width="2"/></Rule>
        <Rule>
            <Filter>(([highway]='track') and not (([tracktype]&lt;&gt;'')))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke-dasharray="3, 4" stroke="rgb(153,153,153)" stroke-width="1.5" stroke-linecap="round"/></Rule>
    </Style>
    <Style name="buildings-lz">
        <Rule>
            <Filter>(([railway]='station') or ([building]='station'))</Filter>
            &maxscale_zoom10;
            <PolygonSymbolizer fill="rgb(212,170,170)"/></Rule>
    </Style>
    <Style name="builtup">
        <Rule>
            &minscale_zoom10;
            &maxscale_zoom8;
            <PolygonSymbolizer fill="rgb(240,240,240)"/></Rule>
    </Style>
    <Style name="castle_walls">
        <Rule>
            &minscale_zoom15;
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(153,153,153)"/></Rule>
        <Rule>
            &maxscale_zoom16;
            <LineSymbolizer stroke="rgb(136,136,136)" stroke-width="2"/></Rule>
    </Style>
    <Style name="citywalls">
        <Rule>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(128,128,128)" stroke-width="4" stroke-opacity="0.8"/></Rule>
        <Rule>
            &minscale_zoom15;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(128,128,128)" stroke-width="6" stroke-opacity="0.8"/></Rule>
        <Rule>
            &maxscale_zoom16;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(128,128,128)" stroke-width="9" stroke-opacity="0.8"/></Rule>
    </Style>
    <Style name="cliffs">
        <Rule>
            <Filter>([natural]='cliff')</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LinePatternSymbolizer file="&symbols;/cliff.png"/>
        </Rule>
        <Rule>
            <Filter>([natural]='cliff')</Filter>
            &maxscale_zoom15;
            <LinePatternSymbolizer file="&symbols;/cliff2.png"/>
        </Rule>
        <Rule>
            <Filter>([man_made]='embankment')</Filter>
            &maxscale_zoom15;
            <LinePatternSymbolizer file="&symbols;/cliff.png"/>
        </Rule>
    </Style>
    <Style name="coast-poly">
        <Rule>
            &maxscale_zoom10;
            <PolygonSymbolizer fill="rgb(255,255,255)"/></Rule>
    </Style>
    <Style name="continent">
        <Rule>
            <Filter>([place]='continent')</Filter>
            &minscale_zoom2;
            &maxscale_zoom1;
            <TextSymbolizer size="10" fill="rgb(157,108,157)" fontset-name="book-fonts" halo-radius="1" wrap-width="20">[name]</TextSymbolizer>
        </Rule>
    </Style>
    <Style name="dam">
        <Rule>
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(68,68,68)" stroke-width="2" stroke-linecap="round"/></Rule>
        <Rule>
            &maxscale_zoom15;
            <TextSymbolizer size="8" fill="rgb(34,34,34)" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
    </Style>
    <Style name="directions">
        <Rule>
            <Filter>([oneway]='yes')</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke-linejoin="bevel" stroke="rgb(108,112,213)" stroke-dasharray="0, 12, 10, 152"/><LineSymbolizer stroke-linejoin="bevel" stroke="rgb(108,112,213)" stroke-width="2" stroke-dasharray="0, 12, 9, 153"/><LineSymbolizer stroke-linejoin="bevel" stroke="rgb(108,112,213)" stroke-width="3" stroke-dasharray="0, 18, 2, 154"/><LineSymbolizer stroke-linejoin="bevel" stroke="rgb(108,112,213)" stroke-width="4" stroke-dasharray="0, 18, 1, 155"/></Rule>
        <Rule>
            <Filter>([oneway]='-1')</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke-linejoin="bevel" stroke="rgb(108,112,213)" stroke-dasharray="0, 12, 10, 152"/><LineSymbolizer stroke-linejoin="bevel" stroke="rgb(108,112,213)" stroke-width="2" stroke-dasharray="0, 13, 9, 152"/><LineSymbolizer stroke-linejoin="bevel" stroke="rgb(108,112,213)" stroke-width="3" stroke-dasharray="0, 14, 2, 158"/><LineSymbolizer stroke-linejoin="bevel" stroke="rgb(108,112,213)" stroke-width="4" stroke-dasharray="0, 15, 1, 158"/></Rule>
    </Style>
    <Style name="ferry-routes">
        <Rule>
            &minscale_zoom10;
            &maxscale_zoom7;
            <LineSymbolizer stroke="rgb(102,102,255)" stroke-width="0.4" stroke-dasharray="4, 4"/></Rule>
        <Rule>
            &maxscale_zoom11;
            <LineSymbolizer stroke="rgb(102,102,255)" stroke-width="0.8" stroke-dasharray="6, 6"/></Rule>
    </Style>
    <Style name="footbikecycle-tunnels">
        <Rule>
            <Filter>(([highway]='bridleway') or (([highway]='path') and ([horse]='designated')))</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="5" stroke-dasharray="4, 2"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="3" stroke-linecap="round"/><LineSymbolizer stroke-linejoin="round" stroke-opacity="0.5" stroke="rgb(0,128,0)" stroke-linecap="round" stroke-dasharray="4, 2" stroke-width="2"/></Rule>
        <Rule>
            <Filter>(([highway]='footway') or (([highway]='path') and ([foot]='designated')))</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="5.5" stroke-dasharray="4, 2"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="3.5" stroke-linecap="round"/><LineSymbolizer stroke-linejoin="round" stroke-opacity="0.5" stroke="rgb(153,153,153)" stroke-linecap="round" stroke-dasharray="1, 3" stroke-width="2.5"/></Rule>
        <Rule>
            <Filter>(([highway]='path') and not (((([bicycle]='designated') or ([foot]='designated')) or ([horse]='designated'))))</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="5.5" stroke-dasharray="4, 2"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-linecap="round" stroke-opacity="0.4"/><LineSymbolizer stroke-linejoin="round" stroke-dasharray="6, 3" stroke-width="0.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='cycleway') or (([highway]='path') and ([bicycle]='designated')))</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="5" stroke-dasharray="4, 2"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="3" stroke-linecap="round"/><LineSymbolizer stroke-linejoin="round" stroke-opacity="0.5" stroke="rgb(102,102,102)" stroke-linecap="round" stroke-dasharray="1, 3" stroke-width="2"/></Rule>
    </Style>
    <Style name="glaciers-text">
        <Rule>
            <Filter>([way_area]&gt;=10000000)</Filter>
            &maxscale_zoom10;
            <TextSymbolizer size="9" fill="rgb(153,153,255)" fontset-name="book-fonts" halo-radius="1" wrap-width="20">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([way_area]&gt;=5000000) and ([way_area]&lt;10000000))</Filter>
            &maxscale_zoom11;
            <TextSymbolizer size="9" fill="rgb(153,153,255)" fontset-name="book-fonts" halo-radius="1" wrap-width="20">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([way_area]&lt;5000000)</Filter>
            &maxscale_zoom12;
            <TextSymbolizer size="9" fill="rgb(153,153,255)" fontset-name="book-fonts" halo-radius="1" wrap-width="20">[name]</TextSymbolizer>
        </Rule>
    </Style>
    <Style name="guideways">
        <Rule>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(102,102,255)" stroke-width="3"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-dasharray="8, 12"/></Rule>
        <Rule>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(102,102,255)" stroke-width="3"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-dasharray="0, 11, 8, 1"/></Rule>
    </Style>
    <Style name="highway-area-casing">
        <Rule>
            <Filter>(([highway]='residential') or ([highway]='unclassified'))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(153,153,153)"/></Rule>
        <Rule>
            <Filter>(((([highway]='pedestrian') or ([highway]='service')) or ([highway]='footway')) or ([highway]='path'))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(128,128,128)"/></Rule>
        <Rule>
            <Filter>([highway]='track')</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="2"/></Rule>
        <Rule>
            <Filter>(([highway]='platform') or ([railway]='platform'))</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(128,128,128)" stroke-width="2" stroke-linecap="round"/></Rule>
    </Style>
    <Style name="highway-area-fill">
        <Rule>
            <Filter>([highway]='living_street')</Filter>
            &maxscale_zoom14;
            <PolygonSymbolizer fill="rgb(204,204,204)"/></Rule>
        <Rule>
            <Filter>((([highway]='residential') or ([highway]='unclassified')) or ([highway]='service'))</Filter>
            &maxscale_zoom14;
            <PolygonSymbolizer fill="rgb(255,255,255)"/></Rule>
        <Rule>
            <Filter>((([highway]='pedestrian') or ([highway]='footway')) or ([highway]='path'))</Filter>
            &maxscale_zoom14;
            <PolygonSymbolizer fill="rgb(237,237,237)"/></Rule>
        <Rule>
            <Filter>([highway]='track')</Filter>
            &maxscale_zoom14;
            <PolygonSymbolizer fill="rgb(223,204,102)"/></Rule>
        <Rule>
            <Filter>(([highway]='platform') or ([railway]='platform'))</Filter>
            &maxscale_zoom16;
            <PolygonSymbolizer gamma="0.65" fill="rgb(187,187,187)"/></Rule>
        <Rule>
            <Filter>([aeroway]='runway')</Filter>
            &maxscale_zoom11;
            <PolygonSymbolizer fill="rgb(187,187,204)"/></Rule>
        <Rule>
            <Filter>([aeroway]='taxiway')</Filter>
            &maxscale_zoom13;
            <PolygonSymbolizer fill="rgb(187,187,204)"/></Rule>
        <Rule>
            <Filter>([aeroway]='helipad')</Filter>
            &maxscale_zoom16;
            <PolygonSymbolizer fill="rgb(187,187,204)"/></Rule>
    </Style>
    <Style name="highway-junctions">
        <Rule>
            &minscale_zoom11;
            &maxscale_zoom11;
            <TextSymbolizer size="9" fill="rgb(102,102,255)" minimum-distance="2" fontset-name="oblique-fonts" halo-radius="1" wrap-width="12">[ref]</TextSymbolizer>
        </Rule>
        <Rule>
            &minscale_zoom14;
            &maxscale_zoom12;
            <TextSymbolizer size="9" fill="rgb(102,102,255)" minimum-distance="2" fontset-name="oblique-fonts" halo-radius="1" wrap-width="12">[ref]</TextSymbolizer>
            <TextSymbolizer size="8" fill="rgb(102,102,255)" dy="-8" minimum-distance="2" fontset-name="oblique-fonts" vertical-alignment="top" halo-radius="1" wrap-width="2" wrap-character=";">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            &maxscale_zoom15;
            <TextSymbolizer size="12" fill="rgb(102,102,255)" minimum-distance="2" fontset-name="oblique-fonts" halo-radius="1" wrap-width="12">[ref]</TextSymbolizer>
            <TextSymbolizer size="11" fill="rgb(102,102,255)" dy="-10" minimum-distance="2" fontset-name="oblique-fonts" vertical-alignment="top" halo-radius="1" wrap-width="2" wrap-character=";">[name]</TextSymbolizer>
        </Rule>
    </Style>
    <Style name="housenames">
        <Rule>
            &minscale_zoom17;
            &maxscale_zoom17;
            <TextSymbolizer size="8" fill="rgb(68,68,68)" fontset-name="book-fonts" wrap-width="20">[addr:housename]</TextSymbolizer>
        </Rule>
        <Rule>
            &maxscale_zoom18;
            <TextSymbolizer size="9" fill="rgb(68,68,68)" fontset-name="book-fonts" wrap-width="20">[addr:housename]</TextSymbolizer>
        </Rule>
    </Style>
    <Style name="housenumbers">
        <Rule>
            &maxscale_zoom17;
            <TextSymbolizer size="9" fill="rgb(68,68,68)" fontset-name="book-fonts">[addr:housenumber]</TextSymbolizer>
        </Rule>
    </Style>
    <Style name="interpolation">
        <Rule>
            &maxscale_zoom17;
            <LineSymbolizer stroke="rgb(136,136,136)" stroke-dasharray="2, 4"/></Rule>
    </Style>
    <Style name="landuse_overlay">
        <Rule>
            <Filter>([landuse]='military')</Filter>
            &maxscale_zoom10;
            <PolygonPatternSymbolizer file="&symbols;/military_red_hz2.png"/>
            <LineSymbolizer stroke="rgb(255,85,85)" stroke-width="3" stroke-opacity="0.329"/></Rule>
        <Rule>
            <Filter>([leisure]='nature_reserve')</Filter>
            &minscale_zoom13;
            &maxscale_zoom10;
            <PolygonPatternSymbolizer file="&symbols;/nature_reserve5.png"/>
            <LineSymbolizer stroke="rgb(102,204,51)" stroke-width="0.5"/></Rule>
        <Rule>
            <Filter>([leisure]='nature_reserve')</Filter>
            &maxscale_zoom14;
            <PolygonPatternSymbolizer file="&symbols;/nature_reserve6.png"/>
            <LineSymbolizer stroke="rgb(102,204,51)"/></Rule>
    </Style>
    <Style name="locks">
        <Rule>
            <Filter>([waterway]='lock_gate')</Filter>
            &maxscale_zoom17;
            <PointSymbolizer file="&symbols;/lock_gate.png"/>
        </Rule>
    </Style>
    <Style name="marinas-area">
        <Rule>
            &minscale_zoom15;
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(0,0,255)" stroke-dasharray="6, 2" stroke-opacity="0.5"/></Rule>
        <Rule>
            &maxscale_zoom16;
            <LineSymbolizer stroke="rgb(0,0,255)" stroke-width="2" stroke-dasharray="6, 2" stroke-opacity="0.5"/></Rule>
    </Style>
    <Style name="minor-roads-casing">
        <Rule>
            <Filter>(([highway]='motorway') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,43)" stroke-width="5"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke-width="3"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="3"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="2.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,43)" stroke-width="6.5"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke-width="4.5"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="7.5"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="8.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,43)" stroke-width="10"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke-width="11.5"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="11.5"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="11.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway') and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,43)" stroke-width="13"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke-width="16"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="16"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary') and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="16" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(187,187,187)" stroke-width="6" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(((([highway]='residential') or ([highway]='unclassified')) or ([highway]='road')) and not (([tunnel]='yes')))</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(153,153,153)" stroke-width="3" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(187,187,187)" stroke-width="7.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(((([highway]='residential') or ([highway]='unclassified')) or ([highway]='road')) and not (([tunnel]='yes')))</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(153,153,153)" stroke-width="4.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(((([highway]='residential') or ([highway]='unclassified')) or ([highway]='road')) and not (([tunnel]='yes')))</Filter>
            &minscale_zoom15;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(187,187,187)" stroke-width="8" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(((([highway]='residential') or ([highway]='unclassified')) or ([highway]='road')) and not (([tunnel]='yes')))</Filter>
            &minscale_zoom16;
            &maxscale_zoom16;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(187,187,187)" stroke-width="11" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(187,187,187)" stroke-width="11" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>((((([highway]='tertiary') or ([highway]='residential')) or ([highway]='unclassified')) or ([highway]='road')) and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(187,187,187)" stroke-width="16" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='service') and not ((([service]='INT-minor') or ([tunnel]='yes'))))</Filter>
            &minscale_zoom15;
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(153,153,153)" stroke-width="2.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='service') and ([tunnel]='yes'))</Filter>
            &minscale_zoom15;
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="2.5" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>(([highway]='service') and not ((([service]='INT-minor') or ([tunnel]='yes'))))</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(153,153,153)" stroke-width="7" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='service') and ([tunnel]='yes'))</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="7" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>(([highway]='service') and ([service]='INT-minor'))</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(153,153,153)" stroke-width="4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='pedestrian') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(128,128,128)" stroke-width="2" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='pedestrian') and ([tunnel]='yes'))</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="2" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>(([highway]='pedestrian') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(128,128,128)" stroke-width="3.6" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='pedestrian') and ([tunnel]='yes'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="3.6" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>(([highway]='pedestrian') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom15;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(128,128,128)" stroke-width="6.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='pedestrian') and ([tunnel]='yes'))</Filter>
            &minscale_zoom15;
            &maxscale_zoom15;
            <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="6.5" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>(([highway]='pedestrian') and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(128,128,128)" stroke-width="9" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='pedestrian') and ([tunnel]='yes'))</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="9" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>([highway]='living_street')</Filter>
            &minscale_zoom13;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="2.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='living_street')</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='living_street')</Filter>
            &minscale_zoom15;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="6" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='living_street')</Filter>
            &minscale_zoom16;
            &maxscale_zoom16;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="9" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='living_street')</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="14.5" stroke-linecap="round"/></Rule>
    </Style>
    <Style name="minor-roads-casing-links">
        <Rule>
            <Filter>([highway]='raceway')</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,192,203)" stroke-width="1.2"/></Rule>
        <Rule>
            <Filter>([highway]='raceway')</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,192,203)" stroke-width="4"/></Rule>
        <Rule>
            <Filter>([highway]='raceway')</Filter>
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,192,203)" stroke-width="7"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,43)" stroke-width="1.5"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,43)" stroke-width="4.5"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,43)" stroke-width="8"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway_link') and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,43)" stroke-width="11"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke-width="3"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke-width="7.5"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke-width="11.5"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk_link') and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke-width="16"/></Rule>
        <Rule>
            <Filter>(([highway]='primary_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="3"/></Rule>
        <Rule>
            <Filter>(([highway]='primary_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="7.5"/></Rule>
        <Rule>
            <Filter>(([highway]='primary_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="11.5"/></Rule>
        <Rule>
            <Filter>(([highway]='primary_link') and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="16"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="2.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="8.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="11.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary_link') and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="16" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(187,187,187)" stroke-width="6" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(187,187,187)" stroke-width="7.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(187,187,187)" stroke-width="11" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary_link') and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(187,187,187)" stroke-width="16" stroke-linecap="round"/></Rule>
    </Style>
    <Style name="minor-roads-fill">
        <Rule>
            <Filter>((([highway]='proposed') or ([highway]='construction')) and not (([construction]&lt;&gt;'')))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke="rgb(192,192,192)" stroke-width="1.5"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="1.5" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>((([highway]='proposed') or ([highway]='construction')) and (([construction]='motorway') or ([construction]='motorway_link')))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke="rgb(79,79,78)" stroke-width="2"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="2" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>((([highway]='proposed') or ([highway]='construction')) and (([construction]='trunk') or ([construction]='trunk_link')))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke="rgb(42,42,42)" stroke-width="2"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="2" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>((([highway]='proposed') or ([highway]='construction')) and (([construction]='primary') or ([construction]='primary_link')))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke="rgb(79,79,79)" stroke-width="2"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="2" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>((([highway]='proposed') or ([highway]='construction')) and (([construction]='secondary') or ([construction]='secondary_link')))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke="rgb(79,79,79)" stroke-width="2"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="2" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>((([highway]='proposed') or ([highway]='construction')) and not (([construction]&lt;&gt;'')))</Filter>
            &minscale_zoom15;
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(192,192,192)" stroke-width="3"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="2.5" stroke-dasharray="6, 4"/></Rule>
        <Rule>
            <Filter>((([highway]='proposed') or ([highway]='construction')) and (([construction]='motorway') or ([construction]='motorway_link')))</Filter>
            &minscale_zoom15;
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(79,79,78)" stroke-width="4"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3.5" stroke-dasharray="6, 4"/></Rule>
        <Rule>
            <Filter>((([highway]='proposed') or ([highway]='construction')) and (([construction]='trunk') or ([construction]='trunk_link')))</Filter>
            &minscale_zoom15;
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(42,42,42)" stroke-width="4"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3.5" stroke-dasharray="6, 4"/></Rule>
        <Rule>
            <Filter>((([highway]='proposed') or ([highway]='construction')) and (([construction]='primary') or ([construction]='primary_link')))</Filter>
            &minscale_zoom15;
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(79,79,79)" stroke-width="4"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3.5" stroke-dasharray="6, 4"/></Rule>
        <Rule>
            <Filter>((([highway]='proposed') or ([highway]='construction')) and (([construction]='secondary') or ([construction]='secondary_link')))</Filter>
            &minscale_zoom15;
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(79,79,79)" stroke-width="4"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3.5" stroke-dasharray="6, 4"/></Rule>
        <Rule>
            <Filter>((([highway]='proposed') or ([highway]='construction')) and (([construction]='tertiary') or ([construction]='tertiary_link')))</Filter>
            &minscale_zoom15;
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(79,79,79)" stroke-width="4"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3.5" stroke-dasharray="6, 4"/></Rule>
        <Rule>
            <Filter>((([highway]='proposed') or ([highway]='construction')) and (((([construction]='residential') or ([construction]='unclassified')) or ([construction]='living_street')) or ([construction]='service')))</Filter>
            &minscale_zoom15;
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(170,170,170)" stroke-width="4"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3.5" stroke-dasharray="6, 4"/></Rule>
        <Rule>
            <Filter>((([highway]='proposed') or ([highway]='construction')) and not (([construction]&lt;&gt;'')))</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke="rgb(192,192,192)" stroke-width="5"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="4" stroke-dasharray="8, 6"/></Rule>
        <Rule>
            <Filter>((([highway]='proposed') or ([highway]='construction')) and (([construction]='motorway') or ([construction]='motorway_link')))</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke="rgb(79,79,78)" stroke-width="8"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="7" stroke-dasharray="8, 6"/></Rule>
        <Rule>
            <Filter>((([highway]='proposed') or ([highway]='construction')) and (([construction]='trunk') or ([construction]='trunk_link')))</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke="rgb(42,42,42)" stroke-width="8"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="7" stroke-dasharray="8, 6"/></Rule>
        <Rule>
            <Filter>((([highway]='proposed') or ([highway]='construction')) and (([construction]='primary') or ([construction]='primary_link')))</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke="rgb(79,79,79)" stroke-width="8"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="7" stroke-dasharray="8, 6"/></Rule>
        <Rule>
            <Filter>((([highway]='proposed') or ([highway]='construction')) and (([construction]='secondary') or ([construction]='secondary_link')))</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke="rgb(79,79,79)" stroke-width="8"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="7" stroke-dasharray="8, 6"/></Rule>
        <Rule>
            <Filter>((([highway]='proposed') or ([highway]='construction')) and (([construction]='tertiary') or ([construction]='tertiary_link')))</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke="rgb(79,79,79)" stroke-width="8"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="7" stroke-dasharray="8, 6"/></Rule>
        <Rule>
            <Filter>((([highway]='proposed') or ([highway]='construction')) and (((([construction]='residential') or ([construction]='unclassified')) or ([construction]='living_street')) or ([construction]='service')))</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke="rgb(170,170,170)" stroke-width="8"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="7" stroke-dasharray="8, 6"/></Rule>
        <Rule>
            <Filter>((([highway]='proposed') or ([highway]='construction')) and ([construction]='cycleway'))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="3" stroke-linecap="round" stroke-opacity="0.4"/><LineSymbolizer stroke-linejoin="round" stroke-dasharray="2, 6" stroke="rgb(102,153,255)" stroke-width="1.2" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke="rgb(79,79,78)" stroke-width="4"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,78)" stroke-width="5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,78)" stroke-width="8.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway') and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,78)" stroke-width="11" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="2.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="11" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="15.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom12;
            &maxscale_zoom11;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="2" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="11" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="15.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="1.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="11" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary') and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="15.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([railway]='rail') and ([tunnel]='yes'))</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="3" stroke-dasharray="1, 9"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(253,253,253)" stroke-width="3" stroke-dasharray="0, 1, 1, 8"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(236,236,236)" stroke-width="3" stroke-dasharray="0, 2, 1, 7"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(202,202,202)" stroke-width="3" stroke-dasharray="0, 3, 1, 6"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(175,175,175)" stroke-width="3" stroke-dasharray="0, 4, 1, 5"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(161,161,161)" stroke-width="3" stroke-dasharray="0, 5, 1, 4"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(155,155,155)" stroke-width="3" stroke-dasharray="0, 6, 1, 3"/></Rule>
        <Rule>
            <Filter>(((([railway]='disused') or ([railway]='abandoned')) or ([railway]='construction')) and not (([highway]&lt;&gt;'')))</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(128,128,128)" stroke-width="2" stroke-dasharray="2, 4"/></Rule>
        <Rule>
            <Filter>(([railway]='rail') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(153,153,153)" stroke-width="3"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-dasharray="8, 12"/></Rule>
        <Rule>
            <Filter>(([railway]='rail') and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(153,153,153)" stroke-width="3"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-dasharray="0, 11, 8, 1"/></Rule>
        <Rule>
            <Filter>([railway]='spur-siding-yard')</Filter>
            &minscale_zoom12;
            &maxscale_zoom11;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)"/></Rule>
        <Rule>
            <Filter>(([railway]='spur-siding-yard') and ([tunnel]='yes'))</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="2" stroke-dasharray="1, 9"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(253,253,253)" stroke-width="2" stroke-dasharray="0, 1, 1, 8"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(236,236,236)" stroke-width="2" stroke-dasharray="0, 2, 1, 7"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(202,202,202)" stroke-width="2" stroke-dasharray="0, 3, 1, 6"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(175,175,175)" stroke-width="2" stroke-dasharray="0, 4, 1, 5"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(161,161,161)" stroke-width="2" stroke-dasharray="0, 5, 1, 4"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(155,155,155)" stroke-width="2" stroke-dasharray="0, 6, 1, 3"/></Rule>
        <Rule>
            <Filter>(([railway]='spur-siding-yard') and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(153,153,153)" stroke-width="2"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="0.8" stroke-dasharray="0, 8, 11, 1"/></Rule>
        <Rule>
            <Filter>((([railway]='narrow_gauge') or ([railway]='funicular')) and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(102,102,102)" stroke-width="2"/></Rule>
        <Rule>
            <Filter>((([railway]='narrow_gauge') or ([railway]='funicular')) and ([tunnel]='yes'))</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(102,102,102)" stroke-width="5" stroke-dasharray="5, 3"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="4"/><LineSymbolizer stroke="rgb(170,170,170)" stroke-width="1.5"/></Rule>
        <Rule>
            <Filter>([railway]='miniature')</Filter>
            &maxscale_zoom15;
            <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="1.2"/><LineSymbolizer stroke="rgb(153,153,153)" stroke-width="3" stroke-dasharray="1, 10"/></Rule>
        <Rule>
            <Filter>(([railway]='tram') and ([tunnel]='yes'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(68,68,68)" stroke-dasharray="5, 3"/></Rule>
        <Rule>
            <Filter>(([railway]='tram') and ([tunnel]='yes'))</Filter>
            &maxscale_zoom15;
            <LineSymbolizer stroke="rgb(68,68,68)" stroke-width="2" stroke-dasharray="5, 3"/></Rule>
        <Rule>
            <Filter>(([railway]='light_rail') and ([tunnel]='yes'))</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(102,102,102)" stroke-width="2" stroke-dasharray="5, 3"/></Rule>
        <Rule>
            <Filter>(([railway]='light_rail') and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(102,102,102)" stroke-width="2"/></Rule>
        <Rule>
            <Filter>(([railway]='subway') and ([tunnel]='yes'))</Filter>
            &maxscale_zoom12;
            <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="2" stroke-dasharray="5, 3"/></Rule>
        <Rule>
            <Filter>(([railway]='subway') and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom12;
            <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="2"/></Rule>
        <Rule>
            <Filter>(((([highway]='tertiary') or ([highway]='residential')) or ([highway]='unclassified')) or ([highway]='road'))</Filter>
            &minscale_zoom12;
            &maxscale_zoom10;
            <LineSymbolizer stroke="rgb(120,120,120)" stroke-width="0.5"/></Rule>
        <Rule>
            <Filter>([highway]='road')</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(120,120,120)" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='road')</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(120,120,120)" stroke-width="3" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='road')</Filter>
            &minscale_zoom15;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(120,120,120)" stroke-width="6.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='road')</Filter>
            &minscale_zoom16;
            &maxscale_zoom16;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(120,120,120)" stroke-width="9.4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='road')</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(120,120,120)" stroke-width="13" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>((([highway]='residential') or ([highway]='unclassified')) and not (([tunnel]='yes')))</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(160,160,160)" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>((([highway]='residential') or ([highway]='unclassified')) and not (([tunnel]='yes')))</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(160,160,160)" stroke-width="3" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>((([highway]='residential') or ([highway]='unclassified')) and not (([tunnel]='yes')))</Filter>
            &minscale_zoom15;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(120,120,120)" stroke-width="6.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>((([highway]='residential') or ([highway]='unclassified')) and not (([tunnel]='yes')))</Filter>
            &minscale_zoom16;
            &maxscale_zoom16;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(120,120,120)" stroke-width="9.4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>((([highway]='residential') or ([highway]='unclassified')) and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(120,120,120)" stroke-width="13" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='living_street')</Filter>
            &minscale_zoom13;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(204,204,204)" stroke-width="1.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='living_street')</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(204,204,204)" stroke-width="3" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='living_street')</Filter>
            &minscale_zoom15;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(204,204,204)" stroke-width="4.7" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='living_street')</Filter>
            &minscale_zoom16;
            &maxscale_zoom16;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(204,204,204)" stroke-width="7.4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='living_street')</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(204,204,204)" stroke-width="13" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(100,100,100)" stroke-width="4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(100,100,100)" stroke-width="4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(100,100,100)" stroke-width="9.4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary') and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(100,100,100)" stroke-width="13" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='service') and not (([service]='INT-minor')))</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(187,187,187)"/></Rule>
        <Rule>
            <Filter>(([highway]='service') and not (([service]='INT-minor')))</Filter>
            &minscale_zoom15;
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="2" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='service') and not (([service]='INT-minor')))</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="6" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='service') and ([service]='INT-minor'))</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="3" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='pedestrian')</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(237,237,237)" stroke-width="1.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='pedestrian')</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(237,237,237)" stroke-width="3" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='pedestrian')</Filter>
            &minscale_zoom15;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(237,237,237)" stroke-width="5.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='pedestrian')</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(237,237,237)" stroke-width="8" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='platform') or ([railway]='platform'))</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(128,128,128)" stroke-width="6" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='steps')</Filter>
            &maxscale_zoom15;
            <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="5" stroke-dasharray="2, 1"/></Rule>
        <Rule>
            <Filter>((([highway]='bridleway') or (([highway]='path') and ([horse]='designated'))) and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="3" stroke-linecap="round" stroke-opacity="0.4"/><LineSymbolizer stroke="rgb(153,153,153)" stroke-width="1.2" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>((([highway]='footway') or (([highway]='path') and ([foot]='designated'))) and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="4" stroke-linecap="round" stroke-opacity="0.4"/><LineSymbolizer stroke-linejoin="round" stroke-dasharray="1, 3" stroke="rgb(153,153,153)" stroke-width="1.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>((([highway]='path') and not (((([bicycle]='designated') or ([foot]='designated')) or ([horse]='designated')))) and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-linecap="round" stroke-opacity="0.4"/><LineSymbolizer stroke-linejoin="round" stroke-dasharray="6, 3" stroke-width="0.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='platform') or ([railway]='platform'))</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(187,187,187)" stroke-width="4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='steps')</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="6" stroke-opacity="0.4"/><LineSymbolizer stroke-linejoin="round" stroke-dasharray="1, 3" stroke="rgb(153,153,153)" stroke-width="2" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>((([highway]='cycleway') or (([highway]='path') and ([bicycle]='designated'))) and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="3" stroke-linecap="round" stroke-opacity="0.4"/><LineSymbolizer stroke-linejoin="round" stroke-dasharray="1, 3" stroke="rgb(102,102,102)" stroke-width="1.2" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='byway')</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="4" stroke-linecap="round" stroke-opacity="0.4"/><LineSymbolizer stroke-linejoin="round" stroke-dasharray="3, 4" stroke="rgb(255,204,0)" stroke-width="1.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='track')</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="2.5" stroke-linecap="round" stroke-opacity="0.4"/><LineSymbolizer stroke-linejoin="round" stroke-dasharray="3, 4" stroke="rgb(153,153,153)" stroke-width="1.2" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='unsurfaced')</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="3.5" stroke-linecap="round" stroke-opacity="0.4"/><LineSymbolizer stroke-linejoin="round" stroke-dasharray="2, 4" stroke="rgb(222,189,156)" stroke-width="2.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([highway]='unsurfaced')</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="5" stroke-linecap="round" stroke-opacity="0.4"/><LineSymbolizer stroke-linejoin="round" stroke-dasharray="4, 6" stroke="rgb(222,189,156)" stroke-width="4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([aeroway]='runway')</Filter>
            &minscale_zoom11;
            &maxscale_zoom11;
            <LineSymbolizer stroke="rgb(187,187,204)" stroke-width="2"/></Rule>
        <Rule>
            <Filter>([aeroway]='runway')</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke="rgb(187,187,204)" stroke-width="4"/></Rule>
        <Rule>
            <Filter>([aeroway]='runway')</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(187,187,204)" stroke-width="7"/></Rule>
        <Rule>
            <Filter>(([aeroway]='runway') and not (([bridge]='yes')))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(187,187,204)" stroke-width="18"/></Rule>
        <Rule>
            <Filter>([aeroway]='taxiway')</Filter>
            &minscale_zoom13;
            &maxscale_zoom11;
            <LineSymbolizer stroke="rgb(187,187,204)"/></Rule>
        <Rule>
            <Filter>(([aeroway]='taxiway') and not (([bridge]='yes')))</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(187,187,204)" stroke-width="4"/></Rule>
        <Rule>
            <Filter>(([aeroway]='taxiway') and not (([bridge]='yes')))</Filter>
            &maxscale_zoom15;
            <LineSymbolizer stroke="rgb(187,187,204)" stroke-width="6"/></Rule>
    </Style>
    <Style name="minor-roads-fill-links">
        <Rule>
            <Filter>(([highway]='motorway_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke="rgb(79,79,78)" stroke-width="3.5"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,78)" stroke-width="5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,78)" stroke-width="7.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway_link') and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,78)" stroke-width="9" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="2.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="11" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk_link') and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(42,42,42)" stroke-width="15.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='primary_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="2.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='primary_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='primary_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="11" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='primary_link') and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="15.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="1.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="11" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary_link') and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="15.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary_link') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="9.4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary_link') and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(79,79,79)" stroke-width="13" stroke-linecap="round"/></Rule>
    </Style>
    <Style name="necountries">
        <Rule>
            &minscale_zoom3;
            &maxscale_zoom1;
            <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="0.5"/></Rule>
    </Style>
    <Style name="nepopulated">
        <Rule>
            <Filter>([SCALERANK]=1)</Filter>
            &minscale_zoom4;
            &maxscale_zoom3;
            <TextSymbolizer size="8" fill="rgb(128,128,128)" dy="2" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1">[NAMEASCII]</TextSymbolizer>
        </Rule>
    </Style>
    <Style name="piers">
        <Rule>
            <Filter>(([man_made]='breakwater') or ([man_made]='groyne'))</Filter>
            &minscale_zoom12;
            &maxscale_zoom11;
            <LineSymbolizer stroke="rgb(170,170,170)"/></Rule>
        <Rule>
            <Filter>([man_made]='pier')</Filter>
            &minscale_zoom12;
            &maxscale_zoom11;
            <LineSymbolizer stroke="rgb(242,239,233)" stroke-width="1.5"/></Rule>
        <Rule>
            <Filter>(([man_made]='breakwater') or ([man_made]='groyne'))</Filter>
            &minscale_zoom15;
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(170,170,170)" stroke-width="2"/></Rule>
        <Rule>
            <Filter>([man_made]='pier')</Filter>
            &minscale_zoom15;
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(242,239,233)" stroke-width="3"/></Rule>
        <Rule>
            <Filter>(([man_made]='breakwater') or ([man_made]='groyne'))</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke="rgb(170,170,170)" stroke-width="4"/></Rule>
        <Rule>
            <Filter>([man_made]='pier')</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke="rgb(242,239,233)" stroke-width="7"/></Rule>
    </Style>
    <Style name="piers-area">
        <Rule>
            &maxscale_zoom12;
            <PolygonSymbolizer fill="rgb(242,239,233)"/></Rule>
    </Style>
    <Style name="points">
        <Rule>
            <Filter>(([amenity]='bus_stop') or ([highway]='bus_stop'))</Filter>
            &minscale_zoom15;
            &maxscale_zoom14;
            <PointSymbolizer file="&symbols;/bus_stop_small.png"/>
        </Rule>
        <Rule>
            <Filter>(([amenity]='bus_stop') or ([highway]='bus_stop'))</Filter>
            &maxscale_zoom16;
            <PointSymbolizer file="&symbols;/bus_stop.p.12.png"/>
        </Rule>
        <Rule>
            <Filter>([amenity]='bus_station')</Filter>
            &maxscale_zoom14;
            <PointSymbolizer file="&symbols;/bus_station.n.16.png"/>
        </Rule>
    </Style>
    <Style name="roads">
        <Rule>
            <Filter>(([highway]='motorway') or ([highway]='motorway_link'))</Filter>
            &minscale_zoom6;
            &maxscale_zoom5;
            <LineSymbolizer stroke="rgb(79,79,78)" stroke-width="0.5"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway') or ([highway]='motorway_link'))</Filter>
            &minscale_zoom8;
            &maxscale_zoom7;
            <LineSymbolizer stroke="rgb(79,79,78)"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway') or ([highway]='motorway_link'))</Filter>
            &minscale_zoom9;
            &maxscale_zoom9;
            <LineSymbolizer stroke="rgb(79,79,78)" stroke-width="3"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway') or ([highway]='motorway_link'))</Filter>
            &minscale_zoom10;
            &maxscale_zoom10;
            <LineSymbolizer stroke="rgb(79,79,78)" stroke-width="4"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway') or ([highway]='motorway_link'))</Filter>
            &minscale_zoom11;
            &maxscale_zoom11;
            <LineSymbolizer stroke="rgb(79,79,78)" stroke-width="4.5"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') or ([highway]='trunk_link'))</Filter>
            &minscale_zoom6;
            &maxscale_zoom5;
            <LineSymbolizer stroke="rgb(42,42,42)" stroke-width="0.4"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') or ([highway]='trunk_link'))</Filter>
            &minscale_zoom8;
            &maxscale_zoom7;
            <LineSymbolizer stroke="rgb(42,42,42)"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') or ([highway]='trunk_link'))</Filter>
            &minscale_zoom10;
            &maxscale_zoom9;
            <LineSymbolizer stroke="rgb(42,42,42)" stroke-width="2"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') or ([highway]='trunk_link'))</Filter>
            &minscale_zoom11;
            &maxscale_zoom11;
            <LineSymbolizer stroke="rgb(42,42,42)" stroke-width="2"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') or ([highway]='primary_link'))</Filter>
            &minscale_zoom8;
            &maxscale_zoom7;
            <LineSymbolizer stroke="rgb(79,79,79)" stroke-width="0.5"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') or ([highway]='primary_link'))</Filter>
            &minscale_zoom9;
            &maxscale_zoom9;
            <LineSymbolizer stroke="rgb(79,79,79)" stroke-width="1.2"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') or ([highway]='primary_link'))</Filter>
            &minscale_zoom10;
            &maxscale_zoom10;
            <LineSymbolizer stroke="rgb(79,79,79)" stroke-width="2"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') or ([highway]='primary_link'))</Filter>
            &minscale_zoom11;
            &maxscale_zoom11;
            <LineSymbolizer stroke="rgb(79,79,79)" stroke-width="2"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary') or ([highway]='secondary_link'))</Filter>
            &minscale_zoom10;
            &maxscale_zoom9;
            <LineSymbolizer stroke="rgb(126,126,126)"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary') or ([highway]='secondary_link'))</Filter>
            &minscale_zoom11;
            &maxscale_zoom11;
            <LineSymbolizer stroke="rgb(126,126,126)"/></Rule>
        <Rule>
            <Filter>([railway]='rail')</Filter>
            &minscale_zoom8;
            &maxscale_zoom6;
            <LineSymbolizer stroke="rgb(170,170,170)" stroke-width="0.6"/></Rule>
        <Rule>
            <Filter>(([railway]='rail') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom9;
            &maxscale_zoom9;
            <LineSymbolizer stroke="rgb(170,170,170)"/></Rule>
        <Rule>
            <Filter>(([railway]='rail') and ([tunnel]='yes'))</Filter>
            &minscale_zoom9;
            &maxscale_zoom9;
            <LineSymbolizer stroke="rgb(170,170,170)" stroke-dasharray="5, 2"/></Rule>
        <Rule>
            <Filter>(((([railway]='tram') or ([railway]='light_rail')) or ([railway]='narrow_gauge')) or ([railway]='funicular'))</Filter>
            &minscale_zoom9;
            &maxscale_zoom8;
            <LineSymbolizer stroke="rgb(204,204,204)"/></Rule>
        <Rule>
            <Filter>(([railway]='rail') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke="rgb(79,79,79)" stroke-width="3" stroke-dasharray="10, 5"/>
            <LineSymbolizer stroke="rgb(150,150,150)" stroke-width="2" stroke-dasharray="10, 5"/></Rule>
        <Rule>
            <Filter>(([railway]='rail') and not (([tunnel]='yes')))</Filter>
            &minscale_zoom11;
            &maxscale_zoom10;
            <LineSymbolizer stroke="rgb(79,79,79)" stroke-width="2.5" stroke-dasharray="8, 3"/>
            <LineSymbolizer stroke="rgb(150,150,150)" stroke-width="1.5" stroke-dasharray="8, 3"/></Rule>
        <Rule>
            <Filter>(([railway]='rail') and ([tunnel]='yes'))</Filter>
            &minscale_zoom12;
            &maxscale_zoom10;
            <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="2" stroke-dasharray="5, 2"/></Rule>
        <Rule>
            <Filter>(((([railway]='tram') or ([railway]='light_rail')) or ([railway]='narrow_gauge')) or ([railway]='funicular'))</Filter>
            &minscale_zoom12;
            &maxscale_zoom10;
            <LineSymbolizer stroke="rgb(170,170,170)"/></Rule>
        <Rule>
            <Filter>([railway]='preserved')</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(170,170,170)" stroke-width="1.5"/></Rule>
        <Rule>
            <Filter>([railway]='preserved')</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(153,153,153)" stroke-width="3"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-dasharray="0, 1, 8, 1"/></Rule>
        <Rule>
            <Filter>([railway]='INT-preserved-ssy')</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(170,170,170)"/></Rule>
        <Rule>
            <Filter>([railway]='INT-preserved-ssy')</Filter>
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(153,153,153)" stroke-width="2"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="0.8" stroke-dasharray="0, 1, 8, 1"/></Rule>
        <Rule>
            <Filter>([railway]='monorail')</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="4" stroke-linecap="round" stroke-opacity="0.4"/><LineSymbolizer stroke-linejoin="round" stroke-dasharray="2, 3" stroke="rgb(119,119,119)" stroke-width="3" stroke-linecap="round"/></Rule>
    </Style>
    <Style name="roads-text">
        <Rule>
            <Filter>((([highway]='unclassified') or ([highway]='residential')) and not (([bridge]='yes')))</Filter>
            &maxscale_zoom15;
            <TextSymbolizer size="10" fill="rgb(255,255,255)" spacing="750" minimum-distance="18" fontset-name="bold-fonts">[ref]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>((([aeroway]='runway') or ([aeroway]='taxiway')) and not (([bridge]='yes')))</Filter>
            &maxscale_zoom15;
            <TextSymbolizer size="10" fill="rgb(51,51,51)" placement="line" spacing="750" minimum-distance="18" fontset-name="book-fonts" halo-radius="1">[ref]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='trunk') or ([highway]='primary'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <TextSymbolizer size="9" fill="rgb(79,79,79)" placement="line" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='trunk') or ([highway]='primary'))</Filter>
            &maxscale_zoom15;
            <TextSymbolizer size="10" fill="rgb(255,255,255)" placement="line" fontset-name="book-fonts">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([highway]='secondary')</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <TextSymbolizer size="9" fill="rgb(79,79,79)" placement="line" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([highway]='secondary')</Filter>
            &maxscale_zoom15;
            <TextSymbolizer size="10" fill="rgb(255,255,255)" placement="line" fontset-name="book-fonts">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([highway]='tertiary')</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <TextSymbolizer size="9" fill="rgb(255,255,255)" placement="line" fontset-name="book-fonts">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([highway]='tertiary')</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="11" fill="rgb(255,255,255)" placement="line" fontset-name="book-fonts">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='unclassified') or ([highway]='residential'))</Filter>
            &minscale_zoom15;
            &maxscale_zoom15;
            <TextSymbolizer size="8" fill="rgb(255,255,255)" placement="line" spacing="300" fontset-name="book-fonts" halo-radius="1" halo-fill="rgb(79,79,79)">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='unclassified') or ([highway]='residential'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom16;
            <TextSymbolizer size="9" fill="rgb(255,255,255)" placement="line" spacing="300" fontset-name="book-fonts" halo-radius="1" halo-fill="rgb(79,79,79)">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='unclassified') or ([highway]='residential'))</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="11" fill="rgb(255,255,255)" placement="line" spacing="400" fontset-name="book-fonts">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <ElseFilter/>
            &minscale_zoom16;
            &maxscale_zoom15;
            <TextSymbolizer size="9" fill="rgb(79,79,79)" placement="line" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <ElseFilter/>
            &maxscale_zoom17;
            <TextSymbolizer size="11" fill="rgb(79,79,79)" placement="line" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
    </Style>
    <Style name="roads-text-low-zoom">
        <Rule>
            <Filter>(([highway]='motorway') and ([length]=1))</Filter>
            &minscale_zoom12;
            &maxscale_zoom10;
            <ShieldSymbolizer size="10" fill="rgb(255,255,255)" placement="line" spacing="750" file="&symbols;/mot_shield1.png" minimum-distance="30" fontset-name="bold-fonts">[ref]</ShieldSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='motorway') and ([length]=2))</Filter>
            &minscale_zoom12;
            &maxscale_zoom10;
            <ShieldSymbolizer size="10" fill="rgb(255,255,255)" placement="line" spacing="750" file="&symbols;/mot_shield2.png" minimum-distance="30" fontset-name="bold-fonts">[ref]</ShieldSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='motorway') and ([length]=3))</Filter>
            &minscale_zoom12;
            &maxscale_zoom10;
            <ShieldSymbolizer size="10" fill="rgb(255,255,255)" placement="line" spacing="750" file="&symbols;/mot_shield3.png" minimum-distance="30" fontset-name="bold-fonts">[ref]</ShieldSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='motorway') and ([length]=4))</Filter>
            &minscale_zoom12;
            &maxscale_zoom10;
            <ShieldSymbolizer size="10" fill="rgb(255,255,255)" placement="line" spacing="750" file="&symbols;/mot_shield4.png" minimum-distance="30" fontset-name="bold-fonts">[ref]</ShieldSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='motorway') and ([length]=5))</Filter>
            &minscale_zoom12;
            &maxscale_zoom10;
            <ShieldSymbolizer size="10" fill="rgb(255,255,255)" placement="line" spacing="750" file="&symbols;/mot_shield5.png" minimum-distance="30" fontset-name="bold-fonts">[ref]</ShieldSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='motorway') and ([length]=6))</Filter>
            &minscale_zoom12;
            &maxscale_zoom10;
            <ShieldSymbolizer size="10" fill="rgb(255,255,255)" placement="line" spacing="750" file="&symbols;/mot_shield6.png" minimum-distance="30" fontset-name="bold-fonts">[ref]</ShieldSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='motorway') and ([length]=7))</Filter>
            &minscale_zoom12;
            &maxscale_zoom10;
            <ShieldSymbolizer size="10" fill="rgb(255,255,255)" placement="line" spacing="750" file="&symbols;/mot_shield6.png" minimum-distance="30" fontset-name="bold-fonts">[ref]</ShieldSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='motorway') and ([length]=8))</Filter>
            &minscale_zoom12;
            &maxscale_zoom10;
            <ShieldSymbolizer size="10" fill="rgb(255,255,255)" placement="line" spacing="750" file="&symbols;/mot_shield7.png" minimum-distance="30" fontset-name="bold-fonts">[ref]</ShieldSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='trunk') and ([length]=1))</Filter>
            &minscale_zoom12;
            &maxscale_zoom11;
            <ShieldSymbolizer size="10" fill="rgb(255,255,255)" placement="line" spacing="750" file="&symbols;/tru_shield1.png" minimum-distance="30" fontset-name="bold-fonts">[ref]</ShieldSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='trunk') and ([length]=2))</Filter>
            &minscale_zoom12;
            &maxscale_zoom11;
            <ShieldSymbolizer size="10" fill="rgb(255,255,255)" placement="line" spacing="750" file="&symbols;/tru_shield2.png" minimum-distance="30" fontset-name="bold-fonts">[ref]</ShieldSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='trunk') and ([length]=3))</Filter>
            &minscale_zoom12;
            &maxscale_zoom11;
            <ShieldSymbolizer size="10" fill="rgb(255,255,255)" placement="line" spacing="750" file="&symbols;/tru_shield3.png" minimum-distance="24" fontset-name="bold-fonts">[ref]</ShieldSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='trunk') and ([length]=4))</Filter>
            &minscale_zoom12;
            &maxscale_zoom11;
            <ShieldSymbolizer size="10" fill="rgb(255,255,255)" placement="line" spacing="750" file="&symbols;/tru_shield4.png" minimum-distance="30" fontset-name="bold-fonts">[ref]</ShieldSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='trunk') and ([length]=5))</Filter>
            &minscale_zoom12;
            &maxscale_zoom11;
            <ShieldSymbolizer size="10" fill="rgb(255,255,255)" placement="line" spacing="750" file="&symbols;/tru_shield5.png" minimum-distance="30" fontset-name="bold-fonts">[ref]</ShieldSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='trunk') and ([length]=6))</Filter>
            &minscale_zoom12;
            &maxscale_zoom11;
            <ShieldSymbolizer size="10" fill="rgb(255,255,255)" placement="line" spacing="750" file="&symbols;/tru_shield6.png" minimum-distance="30" fontset-name="bold-fonts">[ref]</ShieldSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='trunk') and ([length]=7))</Filter>
            &minscale_zoom12;
            &maxscale_zoom11;
            <ShieldSymbolizer size="10" fill="rgb(255,255,255)" placement="line" spacing="750" file="&symbols;/tru_shield7.png" minimum-distance="30" fontset-name="bold-fonts">[ref]</ShieldSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='trunk') and ([length]=8))</Filter>
            &minscale_zoom12;
            &maxscale_zoom11;
            <ShieldSymbolizer size="10" fill="rgb(255,255,255)" placement="line" spacing="750" file="&symbols;/tru_shield8.png" minimum-distance="30" fontset-name="bold-fonts">[ref]</ShieldSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='primary') and ([length]=1))</Filter>
            &minscale_zoom12;
            &maxscale_zoom11;
            <ShieldSymbolizer size="10" fill="rgb(255,255,255)" placement="line" spacing="750" file="&symbols;/pri_shield1.png" minimum-distance="30" fontset-name="bold-fonts">[ref]</ShieldSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='primary') and ([length]=2))</Filter>
            &minscale_zoom12;
            &maxscale_zoom11;
            <ShieldSymbolizer size="10" fill="rgb(255,255,255)" placement="line" spacing="750" file="&symbols;/pri_shield2.png" minimum-distance="30" fontset-name="bold-fonts">[ref]</ShieldSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='primary') and ([length]=3))</Filter>
            &minscale_zoom12;
            &maxscale_zoom11;
            <ShieldSymbolizer size="10" fill="rgb(255,255,255)" placement="line" spacing="750" file="&symbols;/pri_shield3.png" minimum-distance="30" fontset-name="bold-fonts">[ref]</ShieldSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='primary') and ([length]=4))</Filter>
            &minscale_zoom12;
            &maxscale_zoom11;
            <ShieldSymbolizer size="10" fill="rgb(255,255,255)" placement="line" spacing="750" file="&symbols;/pri_shield4.png" minimum-distance="30" fontset-name="bold-fonts">[ref]</ShieldSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='primary') and ([length]=5))</Filter>
            &minscale_zoom12;
            &maxscale_zoom11;
            <ShieldSymbolizer size="10" fill="rgb(255,255,255)" placement="line" spacing="750" file="&symbols;/pri_shield5.png" minimum-distance="30" fontset-name="bold-fonts">[ref]</ShieldSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='primary') and ([length]=6))</Filter>
            &minscale_zoom12;
            &maxscale_zoom11;
            <ShieldSymbolizer size="10" fill="rgb(255,255,255)" placement="line" spacing="750" file="&symbols;/pri_shield6.png" minimum-distance="30" fontset-name="bold-fonts">[ref]</ShieldSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='primary') and ([length]=7))</Filter>
            &minscale_zoom12;
            &maxscale_zoom11;
            <ShieldSymbolizer size="10" fill="rgb(255,255,255)" placement="line" spacing="750" file="&symbols;/pri_shield7.png" minimum-distance="30" fontset-name="bold-fonts">[ref]</ShieldSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([highway]='primary') and ([length]=8))</Filter>
            &minscale_zoom12;
            &maxscale_zoom11;
            <ShieldSymbolizer size="10" fill="rgb(255,255,255)" placement="line" spacing="750" file="&symbols;/pri_shield8.png" minimum-distance="30" fontset-name="bold-fonts">[ref]</ShieldSymbolizer>
        </Rule>
    </Style>
    <Style name="stations">
        <Rule>
            <Filter>([railway]='subway_entrance')</Filter>
            &maxscale_zoom18;
            <PointSymbolizer file="&symbols;/walking.n.12.png"/>
        </Rule>
        <Rule>
            <Filter>(([railway]='station') and not (([disused]='yes')))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <PointSymbolizer file="&symbols;/halt.png"/>
        </Rule>
        <Rule>
            <Filter>(([railway]='station') and not (([disused]='yes')))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <PointSymbolizer file="&symbols;/station_small.png"/>
        </Rule>
        <Rule>
            <Filter>(([railway]='station') and not (([disused]='yes')))</Filter>
            &maxscale_zoom15;
            <PointSymbolizer file="&symbols;/station.png"/>
        </Rule>
        <Rule>
            <Filter>((([railway]='halt') or ([railway]='tram_stop')) or ([aerialway]='station'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <PointSymbolizer file="&symbols;/halt.png"/>
        </Rule>
        <Rule>
            <Filter>((([railway]='halt') or ([railway]='tram_stop')) or ([aerialway]='station'))</Filter>
            &maxscale_zoom15;
            <PointSymbolizer file="&symbols;/station_small.png"/>
        </Rule>
        <Rule>
            <Filter>((([railway]='halt') or ([railway]='tram_stop')) or ([aerialway]='station'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <TextSymbolizer size="16" fill="rgb(102,102,255)" dy="-8" fontset-name="book-fonts" vertical-alignment="top" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>((([railway]='halt') or ([railway]='tram_stop')) or ([aerialway]='station'))</Filter>
            &maxscale_zoom15;
            <TextSymbolizer size="20" fill="rgb(102,102,255)" dy="-10" fontset-name="book-fonts" vertical-alignment="top" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([railway]='station') and not (([disused]='yes')))</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <TextSymbolizer size="18" fill="rgb(102,102,255)" dy="-8" fontset-name="bold-fonts" vertical-alignment="top" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([railway]='station') and not (([disused]='yes')))</Filter>
            &maxscale_zoom15;
            <TextSymbolizer size="22" fill="rgb(102,102,255)" dy="-10" fontset-name="bold-fonts" vertical-alignment="top" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
    </Style>
    <Style name="symbols">
        <Rule>
            <Filter>([railway]='level_crossing')</Filter>
            &minscale_zoom15;
            &maxscale_zoom14;
            <PointSymbolizer file="&symbols;/level_crossing.png"/>
        </Rule>
        <Rule>
            <Filter>([railway]='level_crossing')</Filter>
            &maxscale_zoom16;
            <PointSymbolizer file="&symbols;/level_crossing2.png"/>
        </Rule>
    </Style>
    <Style name="text">
        <Rule>
            <Filter>([place]='island')</Filter>
            &maxscale_zoom12;
            <TextSymbolizer size="18" fill="rgb(0,0,0)" fontset-name="oblique-fonts" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>((((([amenity]='pub') or ([amenity]='restaurant')) or ([amenity]='cafe')) or ([amenity]='fast_food')) or ([amenity]='biergarten'))</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="10" fill="rgb(115,74,8)" dy="9" fontset-name="bold-fonts" vertical-alignment="bottom" halo-radius="1" wrap-width="34">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([amenity]='bar')</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="10" fill="rgb(115,74,8)" dy="11" fontset-name="bold-fonts" vertical-alignment="bottom" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>((([amenity]='library') or ([amenity]='theatre')) or ([amenity]='courthouse'))</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="10" fill="rgb(115,74,8)" dy="12" fontset-name="bold-fonts" vertical-alignment="bottom" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([amenity]='cinema')</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="10" fill="rgb(115,74,8)" dy="14" fontset-name="bold-fonts" vertical-alignment="bottom" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([amenity]='parking') and (([access]='public') or not (([access]&lt;&gt;''))))</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="9" fill="rgb(0,102,255)" dy="9" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1" wrap-width="34">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([amenity]='parking') and (([access]&lt;&gt;'') and not (([access]='public'))))</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="9" fill="rgb(102,204,175)" dy="9" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1" wrap-width="34">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([amenity]='police')</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="10" fill="rgb(115,74,8)" dy="10" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1" wrap-width="30">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([amenity]='fire_station')</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="10" fill="rgb(115,74,8)" dy="9" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1" wrap-width="30">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([amenity]='place_of_worship')</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="10" fill="rgb(0,0,51)" dy="11" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1" wrap-width="30">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([natural]='wood')</Filter>
            &maxscale_zoom15;
            <TextSymbolizer size="10" fill="rgb(0,0,0)" fontset-name="book-fonts" halo-radius="2" wrap-width="10">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([natural]='peak') and not (([name]&lt;&gt;'')))</Filter>
            &maxscale_zoom14;
            <TextSymbolizer size="18" fill="rgb(165,42,42)" dy="6" fontset-name="oblique-fonts" vertical-alignment="bottom" halo-radius="1">[ele]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([natural]='peak') and ([name]&lt;&gt;''))</Filter>
            &maxscale_zoom14;
            <TextSymbolizer size="18" fill="rgb(165,42,42)" dy="18" fontset-name="oblique-fonts" vertical-alignment="bottom" halo-radius="1">[ele]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([natural]='volcano')</Filter>
            &maxscale_zoom13;
            <TextSymbolizer size="10" fill="rgb(165,42,42)" dy="5" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([natural]='volcano') and not (([name]&lt;&gt;'')))</Filter>
            &maxscale_zoom14;
            <TextSymbolizer size="9" fill="rgb(165,42,42)" dy="6" fontset-name="oblique-fonts" vertical-alignment="bottom" halo-radius="1">[ele]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([natural]='volcano') and ([name]&lt;&gt;''))</Filter>
            &maxscale_zoom14;
            <TextSymbolizer size="9" fill="rgb(165,42,42)" dy="16" fontset-name="oblique-fonts" vertical-alignment="bottom" halo-radius="1">[ele]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([natural]='cave_entrance')</Filter>
            &maxscale_zoom15;
            <TextSymbolizer size="10" fill="rgb(165,42,42)" dy="9" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1" wrap-width="20">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([historic]='memorial') or ([historic]='archaeological_site'))</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="9" fill="rgb(165,42,42)" dy="12" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1" wrap-width="20">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(((([natural]='water') or ([natural]='lake')) or ([landuse]='reservoir')) or ([landuse]='basin'))</Filter>
            &maxscale_zoom15;
            <TextSymbolizer size="10" fill="rgb(102,153,204)" fontset-name="book-fonts" halo-radius="1" wrap-width="20">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>((([leisure]&lt;&gt;'') or ([landuse]&lt;&gt;'')) and ([point]='yes'))</Filter>
            &maxscale_zoom15;
            <TextSymbolizer size="9" fill="rgb(0,0,0)" fontset-name="book-fonts" halo-radius="2" wrap-width="10">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([natural]='bay')</Filter>
            &maxscale_zoom14;
            <TextSymbolizer size="10" fill="rgb(102,153,204)" fontset-name="book-fonts" halo-radius="1" wrap-width="20">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([natural]='spring')</Filter>
            &maxscale_zoom16;
            <TextSymbolizer size="8" fill="rgb(102,153,204)" dy="10" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1" wrap-width="20">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([tourism]='alpine_hut')</Filter>
            &maxscale_zoom15;
            <TextSymbolizer size="9" fill="rgb(102,153,204)" dy="10" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([tourism]='alpine_hut')</Filter>
            &maxscale_zoom16;
            <TextSymbolizer size="8" fill="rgb(102,153,204)" dy="22" fontset-name="oblique-fonts" vertical-alignment="bottom" halo-radius="1">[ele]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([amenity]='shelter')</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="9" fill="rgb(102,153,204)" dy="10" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1">[name]</TextSymbolizer>
            <TextSymbolizer size="8" fill="rgb(102,153,204)" dy="22" fontset-name="oblique-fonts" vertical-alignment="bottom" halo-radius="1">[ele]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([amenity]='bank')</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="9" fill="rgb(0,0,0)" dy="9" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>((([tourism]='hotel') or ([tourism]='hostel')) or ([tourism]='chalet'))</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="10" fill="rgb(0,102,255)" dy="11" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([amenity]='embassy')</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="9" fill="rgb(0,102,255)" dy="8" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([tourism]='guest_house')</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="8" fill="rgb(0,102,255)" dy="9" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([tourism]='bed_and_breakfast')</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="8" fill="rgb(0,102,255)" dy="7" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([amenity]='fuel') or ([amenity]='bus_station'))</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="9" fill="rgb(0,102,255)" dy="9" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([tourism]='camp_site')</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="10" fill="rgb(0,102,255)" dy="15" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1" wrap-width="70">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([tourism]='caravan_site')</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="10" fill="rgb(0,102,255)" dy="19" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1" wrap-width="70">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([waterway]='lock')</Filter>
            &maxscale_zoom15;
            <TextSymbolizer size="9" fill="rgb(0,102,255)" dy="10" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1" wrap-width="70">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([leisure]='marina')</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <TextSymbolizer size="8" fill="rgb(0,0,255)" fontset-name="book-fonts" halo-radius="1" wrap-width="30">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([leisure]='marina')</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="10" fill="rgb(0,0,255)" fontset-name="book-fonts" halo-radius="1" wrap-width="30">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([tourism]='theme_park')</Filter>
            &minscale_zoom15;
            &maxscale_zoom14;
            <TextSymbolizer size="8" fill="rgb(115,74,8)" fontset-name="book-fonts" halo-radius="1" wrap-width="30">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([tourism]='theme_park')</Filter>
            &maxscale_zoom16;
            <TextSymbolizer size="10" fill="rgb(115,74,8)" fontset-name="book-fonts" halo-radius="1" wrap-width="30">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([tourism]='museum')</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="10" fill="rgb(115,74,8)" dy="10" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([amenity]='prison')</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="10" fill="rgb(115,74,8)" dy="16" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([tourism]='attraction')</Filter>
            &maxscale_zoom16;
            <TextSymbolizer size="10" fill="rgb(102,0,51)" fontset-name="book-fonts" halo-radius="2" wrap-width="10">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([amenity]='university')</Filter>
            &maxscale_zoom15;
            <TextSymbolizer size="9" fill="rgb(0,0,51)" fontset-name="bold-fonts" halo-radius="1" wrap-width="16">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([amenity]='school') or ([amenity]='college'))</Filter>
            &maxscale_zoom15;
            <PointSymbolizer file="&symbols;/school.png"/>
            <TextSymbolizer size="9" fill="rgb(0,0,51)" fontset-name="book-fonts" halo-radius="1" wrap-width="14">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([amenity]='kindergarten')</Filter>
            &maxscale_zoom16;
            <TextSymbolizer size="8" fill="rgb(0,0,51)" fontset-name="book-fonts" halo-radius="1" wrap-width="14">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([man_made]='lighthouse')</Filter>
            &maxscale_zoom15;
            <TextSymbolizer size="9" fill="rgb(0,0,51)" dy="16" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="2" wrap-width="12">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([man_made]='windmill')</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="9" fill="rgb(115,74,8)" dy="12" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1" wrap-width="20">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([amenity]='hospital')</Filter>
            &maxscale_zoom14;
            <PointSymbolizer file="&symbols;/hospital.p.16.png"/>
        </Rule>
        <Rule>
            <Filter>([amenity]='hospital')</Filter>
            &maxscale_zoom15;
            <PointSymbolizer file="&symbols;/hospital.png"/>
        </Rule>
        <Rule>
            <Filter>([amenity]='pharmacy')</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="8" fill="rgb(218,0,146)" dy="9" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1" wrap-width="12">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>((((((((((([shop]='bakery') or ([shop]='clothes')) or ([shop]='fashion')) or ([shop]='convenience')) or ([shop]='doityourself')) or ([shop]='hairdresser')) or ([shop]='butcher')) or ([shop]='car')) or ([shop]='car_repair')) or ([shop]='bicycle')) or ([shop]='florist'))</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="8" fill="rgb(153,51,153)" dy="9" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1" wrap-width="12">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([shop]='supermarket') or ([shop]='department_store'))</Filter>
            &maxscale_zoom16;
            <TextSymbolizer size="9" fill="rgb(153,51,153)" dy="9" fontset-name="book-fonts" vertical-alignment="bottom" halo-radius="1" wrap-width="20">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([military]='danger_area')</Filter>
            &maxscale_zoom12;
            <TextSymbolizer size="9" fill="rgb(255,192,203)" fontset-name="bold-fonts" halo-radius="1" wrap-width="10">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([aeroway]='gate')</Filter>
            &maxscale_zoom17;
            <TextSymbolizer size="10" fill="rgb(170,102,204)" fontset-name="book-fonts" halo-radius="1" wrap-width="10">[ref]</TextSymbolizer>
        </Rule>
    </Style>
    <Style name="theme_park">
        <Rule>
            <Filter>([tourism]='theme_park')</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="1.5" stroke-dasharray="9, 3" stroke-opacity="0.6"/></Rule>
        <Rule>
            <Filter>([tourism]='theme_park')</Filter>
            &maxscale_zoom15;
            <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="2.5" stroke-dasharray="9, 3" stroke-opacity="0.6"/></Rule>
    </Style>
    <Style name="tracks-notunnel-nobridge">
        <Rule>
            <Filter>([tracktype]='grade1')</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3.5" stroke-opacity="0.4"/><LineSymbolizer stroke="rgb(153,153,153)" stroke-width="2" stroke-opacity="0.7"/></Rule>
        <Rule>
            <Filter>([tracktype]='grade2')</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="3" stroke-linecap="round" stroke-opacity="0.4"/><LineSymbolizer stroke-linejoin="round" stroke-opacity="0.8" stroke="rgb(153,153,153)" stroke-linecap="round" stroke-dasharray="9, 4" stroke-width="1.5"/></Rule>
        <Rule>
            <Filter>([tracktype]='grade3')</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="3" stroke-linecap="round" stroke-opacity="0.4"/><LineSymbolizer stroke-linejoin="round" stroke-opacity="0.8" stroke="rgb(153,153,153)" stroke-linecap="round" stroke-dasharray="3, 4" stroke-width="1.5"/></Rule>
        <Rule>
            <Filter>([tracktype]='grade4')</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="3" stroke-linecap="round" stroke-opacity="0.4"/><LineSymbolizer stroke-linejoin="round" stroke-opacity="0.8" stroke="rgb(153,153,153)" stroke-linecap="round" stroke-dasharray="4, 7, 1, 5" stroke-width="2"/></Rule>
        <Rule>
            <Filter>([tracktype]='grade5')</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="3" stroke-linecap="round" stroke-opacity="0.4"/><LineSymbolizer stroke-linejoin="round" stroke-opacity="0.8" stroke="rgb(153,153,153)" stroke-linecap="round" stroke-dasharray="1, 5" stroke-width="2"/></Rule>
        <Rule>
            <ElseFilter/>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="3" stroke-linecap="round" stroke-opacity="0.4"/><LineSymbolizer stroke-linejoin="round" stroke-dasharray="3, 4" stroke="rgb(153,153,153)" stroke-width="1.5" stroke-linecap="round"/></Rule>
    </Style>
    <Style name="tracks-tunnels">
        <Rule>
            <Filter>([tracktype]='grade1')</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="5" stroke-dasharray="4, 2"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3.5"/><LineSymbolizer stroke="rgb(153,153,153)" stroke-width="2" stroke-opacity="0.5"/></Rule>
        <Rule>
            <Filter>([tracktype]='grade2')</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="4.5" stroke-dasharray="4, 2"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="3" stroke-linecap="round"/><LineSymbolizer stroke-linejoin="round" stroke-opacity="0.5" stroke="rgb(153,153,153)" stroke-linecap="round" stroke-dasharray="3, 4" stroke-width="1.5"/></Rule>
        <Rule>
            <Filter>([tracktype]='grade3')</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="4.5" stroke-dasharray="4, 2"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="3.5" stroke-linecap="round"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(153,153,153)" stroke-width="2" stroke-linecap="round" stroke-opacity="0.5"/></Rule>
        <Rule>
            <Filter>([tracktype]='grade4')</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="4.5" stroke-dasharray="4, 2"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="3" stroke-linecap="round"/><LineSymbolizer stroke-linejoin="round" stroke-opacity="0.5" stroke="rgb(153,153,153)" stroke-linecap="round" stroke-dasharray="4, 7, 1, 5" stroke-width="2"/></Rule>
        <Rule>
            <Filter>([tracktype]='grade5')</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="4.5" stroke-dasharray="4, 2"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="3" stroke-linecap="round"/><LineSymbolizer stroke-linejoin="round" stroke-opacity="0.5" stroke="rgb(153,153,153)" stroke-linecap="round" stroke-dasharray="1, 5" stroke-width="2"/></Rule>
        <Rule>
            <ElseFilter/>
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(128,128,128)" stroke-width="4.5" stroke-dasharray="4, 2"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="3" stroke-linecap="round"/><LineSymbolizer stroke-linejoin="round" stroke-opacity="0.5" stroke="rgb(153,153,153)" stroke-linecap="round" stroke-dasharray="3, 4" stroke-width="1.5"/></Rule>
    </Style>
    <Style name="trams">
        <Rule>
            <Filter>([railway]='tram')</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(68,68,68)"/></Rule>
        <Rule>
            <Filter>(([railway]='tram') and not (([bridge]='yes')))</Filter>
            &maxscale_zoom15;
            <LineSymbolizer stroke="rgb(68,68,68)" stroke-width="2"/></Rule>
        <Rule>
            <Filter>(([railway]='tram') and ([bridge]='yes'))</Filter>
            &maxscale_zoom15;
            <LineSymbolizer stroke-width="5"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="4"/><LineSymbolizer stroke="rgb(68,68,68)" stroke-width="2"/></Rule>
    </Style>
    <Style name="tunnels-casing">
        <Rule>
            <Filter>(([highway]='motorway') or ([highway]='motorway_link'))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke="rgb(42,42,43)" stroke-width="3" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway') or ([highway]='motorway_link'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(42,42,43)" stroke-width="6.5" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway') or ([highway]='motorway_link'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke="rgb(42,42,43)" stroke-width="10" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway') or ([highway]='motorway_link'))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke="rgb(42,42,43)" stroke-width="13" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') or ([highway]='trunk_link'))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-width="4" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') or ([highway]='trunk_link'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-width="5" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') or ([highway]='trunk_link'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-width="11" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') or ([highway]='trunk_link'))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-width="14" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') or ([highway]='primary_link'))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke="rgb(42,42,42)" stroke-width="4" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') or ([highway]='primary_link'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(42,42,42)" stroke-width="8" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') or ([highway]='primary_link'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke="rgb(42,42,42)" stroke-width="11" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') or ([highway]='primary_link'))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke="rgb(42,42,42)" stroke-width="14" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary') or ([highway]='secondary_link'))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke="rgb(42,42,42)" stroke-width="4" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary') or ([highway]='secondary_link'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(42,42,42)" stroke-width="5" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary') or ([highway]='secondary_link'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke="rgb(42,42,42)" stroke-width="12" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary') or ([highway]='secondary_link'))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke="rgb(42,42,42)" stroke-width="17" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary') or ([highway]='tertiary_link'))</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="5" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary') or ([highway]='tertiary_link'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="5" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>((([highway]='residential') or ([highway]='unclassified')) or ([highway]='road'))</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="3" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>((([highway]='residential') or ([highway]='unclassified')) or ([highway]='road'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="4.5" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>((([highway]='residential') or ([highway]='unclassified')) or ([highway]='road'))</Filter>
            &minscale_zoom15;
            &maxscale_zoom15;
            <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="8" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>((([highway]='residential') or ([highway]='unclassified')) or ([highway]='road'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom16;
            <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="11" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary') or ([highway]='tertiary_link'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="11" stroke-dasharray="4, 2"/></Rule>
        <Rule>
            <Filter>((((([highway]='tertiary') or ([highway]='tertiary_link')) or ([highway]='residential')) or ([highway]='unclassified')) or ([highway]='road'))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke="rgb(153,153,153)" stroke-width="16" stroke-dasharray="4, 2"/></Rule>
    </Style>
    <Style name="tunnels-fill">
        <Rule>
            <Filter>(([highway]='motorway') or ([highway]='motorway_link'))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(143,143,143)" stroke-width="2" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway') or ([highway]='motorway_link'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(143,143,143)" stroke-width="5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway') or ([highway]='motorway_link'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(143,143,143)" stroke-width="8.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='motorway') or ([highway]='motorway_link'))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(143,143,143)" stroke-width="11" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') or ([highway]='trunk_link'))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(127,127,127)" stroke-width="2.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') or ([highway]='trunk_link'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(127,127,127)" stroke-width="3.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') or ([highway]='trunk_link'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(127,127,127)" stroke-width="9" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='trunk') or ([highway]='trunk_link'))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(127,127,127)" stroke-width="12" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') or ([highway]='primary_link'))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(148,148,148)" stroke-width="2.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') or ([highway]='primary_link'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(148,148,148)" stroke-width="3.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') or ([highway]='primary_link'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(148,148,148)" stroke-width="9" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='primary') or ([highway]='primary_link'))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(148,148,148)" stroke-width="12" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary') or ([highway]='secondary_link'))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(148,148,148)" stroke-width="2" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary') or ([highway]='secondary_link'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(148,148,148)" stroke-width="4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary') or ([highway]='secondary_link'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(148,148,148)" stroke-width="10" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='secondary') or ([highway]='secondary_link'))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(148,148,148)" stroke-width="14" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary') or ([highway]='tertiary_link'))</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,204)" stroke-width="4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary') or ([highway]='tertiary_link'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,204)" stroke-width="4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>((([highway]='residential') or ([highway]='unclassified')) or ([highway]='road'))</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="2" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>((([highway]='residential') or ([highway]='unclassified')) or ([highway]='road'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="3" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary') or ([highway]='tertiary_link'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,204)" stroke-width="9.4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([highway]='tertiary') or ([highway]='tertiary_link'))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,204)" stroke-width="13" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>((([highway]='residential') or ([highway]='unclassified')) or ([highway]='road'))</Filter>
            &minscale_zoom15;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="6.5" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>((([highway]='residential') or ([highway]='unclassified')) or ([highway]='road'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom16;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="9.4" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>((([highway]='residential') or ([highway]='unclassified')) or ([highway]='road'))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(255,255,255)" stroke-width="13" stroke-linecap="round"/></Rule>
    </Style>
    <Style name="turning_circle-casing">
        <Rule>
            <Filter>([int_tc_type]='tertiary')</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <PointSymbolizer file="&symbols;/turning_circle-tert-casing.18.png" allow-overlap="1"/>
        </Rule>
        <Rule>
            <Filter>(([int_tc_type]='residential') or ([int_tc_type]='unclassified'))</Filter>
            &minscale_zoom15;
            &maxscale_zoom15;
            <PointSymbolizer file="&symbols;/turning_circle-uncl-casing.16.png" allow-overlap="1"/>
        </Rule>
        <Rule>
            <Filter>([int_tc_type]='living_street')</Filter>
            &minscale_zoom15;
            &maxscale_zoom15;
            <PointSymbolizer file="&symbols;/turning_circle-uncl-fill.16.png" allow-overlap="1"/>
        </Rule>
        <Rule>
            <Filter>(([int_tc_type]='residential') or ([int_tc_type]='unclassified'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom16;
            <PointSymbolizer file="&symbols;/turning_circle-uncl-casing.18.png" allow-overlap="1"/>
        </Rule>
        <Rule>
            <Filter>([int_tc_type]='service')</Filter>
            &minscale_zoom16;
            &maxscale_zoom16;
            <PointSymbolizer file="&symbols;/turning_circle-uncl-casing.14.png" allow-overlap="1"/>
        </Rule>
        <Rule>
            <Filter>([int_tc_type]='living_street')</Filter>
            &minscale_zoom16;
            &maxscale_zoom16;
            <PointSymbolizer file="&symbols;/turning_circle-uncl-fill.18.png" allow-overlap="1"/>
        </Rule>
        <Rule>
            <Filter>([int_tc_type]='tertiary')</Filter>
            &maxscale_zoom17;
            <PointSymbolizer file="&symbols;/turning_circle-tert-casing.24.png" allow-overlap="1"/>
        </Rule>
        <Rule>
            <Filter>(([int_tc_type]='residential') or ([int_tc_type]='unclassified'))</Filter>
            &maxscale_zoom17;
            <PointSymbolizer file="&symbols;/turning_circle-uncl-casing.24.png" allow-overlap="1"/>
        </Rule>
        <Rule>
            <Filter>([int_tc_type]='service')</Filter>
            &maxscale_zoom17;
            <PointSymbolizer file="&symbols;/turning_circle-uncl-casing.16.png" allow-overlap="1"/>
        </Rule>
        <Rule>
            <Filter>([int_tc_type]='living_street')</Filter>
            &maxscale_zoom17;
            <PointSymbolizer file="&symbols;/turning_circle-uncl-fill.24.png" allow-overlap="1"/>
        </Rule>
    </Style>
    <Style name="turning_circle-fill">
        <Rule>
            <Filter>([int_tc_type]='tertiary')</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <PointSymbolizer file="&symbols;/turning_circle-tert-fill.16.png" allow-overlap="1"/>
        </Rule>
        <Rule>
            <Filter>(([int_tc_type]='residential') or ([int_tc_type]='unclassified'))</Filter>
            &minscale_zoom15;
            &maxscale_zoom15;
            <PointSymbolizer file="&symbols;/turning_circle-uncl-fill.14.png" allow-overlap="1"/>
        </Rule>
        <Rule>
            <Filter>([int_tc_type]='living_street')</Filter>
            &minscale_zoom15;
            &maxscale_zoom15;
            <PointSymbolizer file="&symbols;/turning_circle-livs-fill.14.png" allow-overlap="1"/>
        </Rule>
        <Rule>
            <Filter>(([int_tc_type]='residential') or ([int_tc_type]='unclassified'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom16;
            <PointSymbolizer file="&symbols;/turning_circle-uncl-fill.16.png" allow-overlap="1"/>
        </Rule>
        <Rule>
            <Filter>([int_tc_type]='service')</Filter>
            &minscale_zoom16;
            &maxscale_zoom16;
            <PointSymbolizer file="&symbols;/turning_circle-uncl-fill.12.png" allow-overlap="1"/>
        </Rule>
        <Rule>
            <Filter>([int_tc_type]='living_street')</Filter>
            &minscale_zoom16;
            &maxscale_zoom16;
            <PointSymbolizer file="&symbols;/turning_circle-livs-fill.16.png" allow-overlap="1"/>
        </Rule>
        <Rule>
            <Filter>([int_tc_type]='tertiary')</Filter>
            &maxscale_zoom17;
            <PointSymbolizer file="&symbols;/turning_circle-tert-fill.22.png" allow-overlap="1"/>
        </Rule>
        <Rule>
            <Filter>(([int_tc_type]='residential') or ([int_tc_type]='unclassified'))</Filter>
            &maxscale_zoom17;
            <PointSymbolizer file="&symbols;/turning_circle-uncl-fill.22.png" allow-overlap="1"/>
        </Rule>
        <Rule>
            <Filter>([int_tc_type]='service')</Filter>
            &maxscale_zoom17;
            <PointSymbolizer file="&symbols;/turning_circle-uncl-fill.14.png" allow-overlap="1"/>
        </Rule>
        <Rule>
            <Filter>([int_tc_type]='living_street')</Filter>
            &maxscale_zoom17;
            <PointSymbolizer file="&symbols;/turning_circle-livs-fill.22.png" allow-overlap="1"/>
        </Rule>
    </Style>
    <Style name="water-areas-overlay">
        <Rule>
            <Filter>(([natural]='marsh') or ([natural]='wetland'))</Filter>
            &maxscale_zoom13;
            <PolygonPatternSymbolizer file="&symbols;/marsh.png"/>
        </Rule>
    </Style>
    <Style name="water-lines-casing">
        <Rule>
            <Filter>((([waterway]='stream') or ([waterway]='ditch')) or ([waterway]='drain'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="1.5"/></Rule>
        <Rule>
            <Filter>([waterway]='stream')</Filter>
            &maxscale_zoom15;
            <LineSymbolizer stroke="rgb(255,255,255)" stroke-width="2.5"/></Rule>
    </Style>
    <Style name="water-lines-low-zoom">
        <Rule>
            <Filter>([waterway]='river')</Filter>
            &minscale_zoom8;
            &maxscale_zoom8;
            <LineSymbolizer stroke="rgb(152,188,218)" stroke-width="0.7"/></Rule>
        <Rule>
            <Filter>([waterway]='river')</Filter>
            &minscale_zoom9;
            &maxscale_zoom9;
            <LineSymbolizer stroke="rgb(152,188,218)" stroke-width="1.2"/></Rule>
        <Rule>
            <Filter>([waterway]='river')</Filter>
            &minscale_zoom11;
            &maxscale_zoom10;
            <LineSymbolizer stroke="rgb(152,188,218)" stroke-width="1.6"/></Rule>
    </Style>
    <Style name="water_areas">
        <Rule>
            <Filter>([natural]='glacier')</Filter>
            &minscale_zoom7;
            &maxscale_zoom6;
            <LineSymbolizer stroke="rgb(153,204,255)" stroke-width="1.5" stroke-dasharray="4, 2"/><PolygonPatternSymbolizer file="&symbols;/glacier.png"/>
        </Rule>
        <Rule>
            <Filter>([natural]='glacier')</Filter>
            &maxscale_zoom8;
            <LineSymbolizer stroke="rgb(153,204,255)" stroke-width="1.5" stroke-dasharray="4, 2"/><PolygonPatternSymbolizer file="&symbols;/glacier2.png"/>
        </Rule>
        <Rule>
            <Filter>((([waterway]='dock') or ([waterway]='mill_pond')) or ([waterway]='canal'))</Filter>
            &maxscale_zoom9;
            <PolygonSymbolizer gamma="0.75" fill="rgb(152,188,218)"/></Rule>
        <Rule>
            <Filter>([landuse]='basin')</Filter>
            &maxscale_zoom7;
            <PolygonSymbolizer gamma="0.75" fill="rgb(152,188,218)"/></Rule>
        <Rule>
            <Filter>(((((([natural]='lake') or ([natural]='water')) or ([landuse]='reservoir')) or ([waterway]='riverbank')) or ([landuse]='water')) or ([natural]='bay'))</Filter>
            &maxscale_zoom6;
            <PolygonSymbolizer gamma="0.75" fill="rgb(152,188,218)"/></Rule>
        <Rule>
            <Filter>([natural]='mud')</Filter>
            &maxscale_zoom13;
            <PolygonPatternSymbolizer file="&symbols;/mud.png"/>
        </Rule>
        <Rule>
            <Filter>([natural]='land')</Filter>
            &maxscale_zoom10;
            <PolygonSymbolizer fill="rgb(255,255,255)"/></Rule>
    </Style>
    <Style name="water_lines">
        <Rule>
            <Filter>([waterway]='weir')</Filter>
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(170,170,170)" stroke-width="2" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([waterway]='wadi')</Filter>
            &minscale_zoom15;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(152,188,218)" stroke-linecap="round" stroke-dasharray="4, 4"/></Rule>
        <Rule>
            <Filter>([waterway]='wadi')</Filter>
            &maxscale_zoom16;
            <LineSymbolizer stroke-linejoin="round" stroke-dasharray="4, 4" stroke="rgb(152,188,218)" stroke-width="2" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([waterway]='river')</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(152,188,218)" stroke-width="2" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>([waterway]='river')</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(152,188,218)" stroke-width="3" stroke-linecap="round"/><TextSymbolizer size="9" fill="rgb(102,153,204)" placement="line" spacing="400" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([waterway]='river')</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(152,188,218)" stroke-width="5" stroke-linecap="round"/><TextSymbolizer size="10" fill="rgb(102,153,204)" placement="line" spacing="400" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([waterway]='river')</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(152,188,218)" stroke-width="6" stroke-linecap="round"/><TextSymbolizer size="10" fill="rgb(102,153,204)" placement="line" spacing="400" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([waterway]='river')</Filter>
            &minscale_zoom17;
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(152,188,218)" stroke-width="10" stroke-linecap="round"/><TextSymbolizer size="10" fill="rgb(102,153,204)" placement="line" spacing="400" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>([waterway]='river')</Filter>
            &maxscale_zoom18;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(152,188,218)" stroke-width="12" stroke-linecap="round"/><TextSymbolizer size="10" fill="rgb(102,153,204)" placement="line" spacing="400" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([waterway]='canal') and not (([disused]='yes')))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(152,188,218)" stroke-width="3" stroke-linecap="round"/></Rule>
        <Rule>
            <Filter>(([waterway]='canal') and not (([disused]='yes')))</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(152,188,218)" stroke-width="4" stroke-linecap="round"/><TextSymbolizer size="8" fill="rgb(102,153,204)" placement="line" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>((([waterway]='stream') or ([waterway]='ditch')) or ([waterway]='drain'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom13;
            <LineSymbolizer stroke="rgb(152,188,218)"/></Rule>
        <Rule>
            <Filter>(([waterway]='river') and ([tunnel]='yes'))</Filter>
            &minscale_zoom14;
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(152,188,218)" stroke-width="6" stroke-dasharray="4, 2"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="4"/><TextSymbolizer size="10" fill="rgb(102,153,204)" placement="line" minimum-distance="200" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([waterway]='river') and ([tunnel]='yes'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom15;
            <LineSymbolizer stroke="rgb(152,188,218)" stroke-width="7" stroke-dasharray="4, 2"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="4"/><TextSymbolizer size="10" fill="rgb(102,153,204)" placement="line" minimum-distance="200" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([waterway]='river') and ([tunnel]='yes'))</Filter>
            &minscale_zoom17;
            &maxscale_zoom17;
            <LineSymbolizer stroke="rgb(152,188,218)" stroke-width="11" stroke-dasharray="4, 2"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="7"/><TextSymbolizer size="10" fill="rgb(102,153,204)" placement="line" minimum-distance="200" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([waterway]='river') and ([tunnel]='yes'))</Filter>
            &maxscale_zoom18;
            <LineSymbolizer stroke="rgb(152,188,218)" stroke-width="13" stroke-dasharray="4, 2"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="9"/><TextSymbolizer size="10" fill="rgb(102,153,204)" placement="line" minimum-distance="200" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([waterway]='canal') and ([tunnel]='yes'))</Filter>
            &minscale_zoom16;
            &maxscale_zoom14;
            <LineSymbolizer stroke="rgb(152,188,218)" stroke-width="7" stroke-dasharray="4, 2"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="3"/><TextSymbolizer size="9" fill="rgb(102,153,204)" placement="line" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([waterway]='canal') and not ((([tunnel]='yes') or ([disused]='yes'))))</Filter>
            &minscale_zoom16;
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(152,188,218)" stroke-width="7" stroke-linecap="round"/><TextSymbolizer size="9" fill="rgb(102,153,204)" placement="line" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([waterway]='canal') and ([tunnel]='yes'))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke="rgb(152,188,218)" stroke-width="11" stroke-dasharray="4, 2"/><LineSymbolizer stroke="rgb(255,255,255)" stroke-width="7"/><TextSymbolizer size="9" fill="rgb(102,153,204)" placement="line" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([waterway]='canal') and not (((([tunnel]='yes') or ([disused]='yes')) or ([lock]='yes'))))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(152,188,218)" stroke-width="11" stroke-linecap="round"/><TextSymbolizer size="9" fill="rgb(102,153,204)" placement="line" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>((([waterway]='canal') and not ((([tunnel]='yes') or ([disused]='yes')))) and ([lock]='yes'))</Filter>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke="rgb(152,188,218)" stroke-width="7" stroke-linecap="round"/><TextSymbolizer size="9" fill="rgb(102,153,204)" fontset-name="book-fonts" halo-radius="1" wrap-width="20">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([waterway]='derelict_canal') or (([waterway]='canal') and ([disused]='yes')))</Filter>
            &minscale_zoom12;
            &maxscale_zoom12;
            <LineSymbolizer stroke-linejoin="round" stroke-opacity="0.5" stroke="rgb(181,228,208)" stroke-linecap="round" stroke-dasharray="4, 4" stroke-width="1.5"/></Rule>
        <Rule>
            <Filter>(([waterway]='derelict_canal') or (([waterway]='canal') and ([disused]='yes')))</Filter>
            &minscale_zoom13;
            &maxscale_zoom13;
            <LineSymbolizer stroke-linejoin="round" stroke-opacity="0.5" stroke="rgb(181,228,208)" stroke-linecap="round" stroke-dasharray="4, 6" stroke-width="2.5"/><TextSymbolizer size="9" fill="rgb(128,209,174)" placement="line" spacing="600" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([waterway]='derelict_canal') or (([waterway]='canal') and ([disused]='yes')))</Filter>
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke-opacity="0.5" stroke="rgb(181,228,208)" stroke-linecap="round" stroke-dasharray="4, 8" stroke-width="4.5"/><TextSymbolizer size="10" fill="rgb(128,209,174)" placement="line" spacing="600" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>(([waterway]='stream') and ([tunnel]='yes'))</Filter>
            &maxscale_zoom15;
            <LineSymbolizer stroke="rgb(152,188,218)" stroke-width="2.4" stroke-dasharray="4, 2"/><LineSymbolizer stroke="rgb(243,247,247)" stroke-width="1.2"/></Rule>
        <Rule>
            <Filter>(([waterway]='stream') and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom15;
            <LineSymbolizer stroke="rgb(152,188,218)" stroke-width="2"/><TextSymbolizer size="8" fill="rgb(102,153,204)" placement="line" spacing="600" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            <Filter>((([waterway]='drain') or ([waterway]='ditch')) and ([tunnel]='yes'))</Filter>
            &maxscale_zoom15;
            <LineSymbolizer stroke="rgb(152,188,218)" stroke-width="2" stroke-dasharray="4, 2"/><LineSymbolizer stroke="rgb(243,247,247)"/></Rule>
        <Rule>
            <Filter>((([waterway]='drain') or ([waterway]='ditch')) and not (([tunnel]='yes')))</Filter>
            &maxscale_zoom15;
            <LineSymbolizer stroke="rgb(152,188,218)"/><TextSymbolizer size="8" fill="rgb(102,153,204)" placement="line" spacing="600" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
    </Style>
    <Style name="waterway-bridges">
        <Rule>
            &minscale_zoom16;
            &maxscale_zoom14;
            <LineSymbolizer stroke-linejoin="round" stroke-width="7"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(152,188,218)" stroke-width="6" stroke-linecap="round"/><TextSymbolizer size="9" fill="rgb(102,153,204)" placement="line" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
        <Rule>
            &maxscale_zoom17;
            <LineSymbolizer stroke-linejoin="round" stroke-width="11"/><LineSymbolizer stroke-linejoin="round" stroke="rgb(152,188,218)" stroke-width="10" stroke-linecap="round"/><TextSymbolizer size="9" fill="rgb(102,153,204)" placement="line" fontset-name="book-fonts" halo-radius="1">[name]</TextSymbolizer>
        </Rule>
    </Style>
    <Style name="world">
        <Rule>
            &minscale_zoom9;
            &maxscale_zoom0;
            <PolygonSymbolizer fill="rgb(255,255,255)"/></Rule>
    </Style>



    <Layer name="world" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>world</StyleName>
        <Datasource>
            <Parameter name="file">&world_boundaries;/shoreline_300</Parameter>
            <Parameter name="type">shape</Parameter>
        </Datasource>
    </Layer>
    <Layer name="coast-poly" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>coast-poly</StyleName>
        <Datasource>
            <Parameter name="file">&world_boundaries;/processed_p</Parameter>
            <Parameter name="type">shape</Parameter>
        </Datasource>
    </Layer>
    <Layer name="builtup" srs="+proj=merc +datum=WGS84 +over">
        <StyleName>builtup</StyleName>
        <Datasource>
            <Parameter name="file">&world_boundaries;/builtup_area</Parameter>
            <Parameter name="type">shape</Parameter>
        </Datasource>
    </Layer>
    <Layer name="necountries" srs="+init=epsg:4326">
        <StyleName>necountries</StyleName>
        <Datasource>
            <Parameter name="file">&world_boundaries;/ne_110m_admin_0_boundary_lines_land.shp</Parameter>
            <Parameter name="type">shape</Parameter>
        </Datasource>
    </Layer>
    <Layer name="nepopulated" srs="+init=epsg:4326">
        <StyleName>nepopulated</StyleName>
        <Datasource>
            <Parameter name="encoding">latin1</Parameter>
            <Parameter name="file">&world_boundaries;/ne_10m_populated_places.shp</Parameter>
            <Parameter name="type">shape</Parameter>
        </Datasource>
    </Layer>
    <Layer name="water-lines-casing" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>water-lines-casing</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,waterway
      from planet_osm_line
      where waterway in ('stream','drain','ditch')
        and (tunnel is null or tunnel != 'yes')
      ) as water_lines</Parameter>
            </Datasource>
    </Layer>
    <Layer name="water_areas" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>water_areas</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,"natural",waterway,landuse,name
      from planet_osm_polygon
      where (waterway in ('dock','mill_pond','riverbank','canal')
         or landuse in ('reservoir','water','basin')
         or "natural" in ('lake','water','land','glacier','mud','bay'))
         and building is null
      order by z_order,way_area desc
      ) as water_areas</Parameter>
            </Datasource>
    </Layer>
    <Layer name="water-areas-overlay" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>water-areas-overlay</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,"natural"
      from planet_osm_polygon
      where "natural" in ('marsh','wetland') and building is null
      order by z_order,way_area desc
      ) as water_areas</Parameter>
            </Datasource>
    </Layer>
    <Layer name="glaciers-text" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>glaciers-text</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,name,way_area
      from planet_osm_polygon
      where "natural"='glacier' and building is null
      order by way_area desc
      ) as glaciers</Parameter>
            </Datasource>
    </Layer>
    <Layer name="water-lines-low-zoom" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>water-lines-low-zoom</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,waterway
      from planet_osm_line
      where waterway='river'
      ) as water_lines</Parameter>
            </Datasource>
    </Layer>
    <Layer name="water_lines" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>water_lines</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,waterway,disused,lock,name,
      case when tunnel in ('yes','true','1') then 'yes'::text else tunnel end as tunnel
      from planet_osm_line
      where waterway in ('weir','river','canal','derelict_canal','stream','drain','ditch','wadi')
        and (bridge is null or bridge not in ('yes','true','1','aqueduct'))
      order by z_order
      ) as water_lines</Parameter>
            </Datasource>
    </Layer>
    <Layer name="dam" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>dam</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,name from planet_osm_line where waterway='dam') as dam</Parameter>
            </Datasource>
    </Layer>
    <Layer name="marinas-area" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>marinas-area</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way from planet_osm_polygon where leisure ='marina') as marinas
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="piers-area" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>piers-area</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,man_made from planet_osm_polygon where man_made in ('pier','breakwater','groyne')) as piers
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="piers" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>piers</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,man_made from planet_osm_line where man_made in ('pier','breakwater','groyne')) as piers
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="locks" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>locks</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,waterway from planet_osm_point where waterway='lock_gate') as locks
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="tunnels" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>tunnels-casing</StyleName>
        <StyleName>tunnels-fill</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,highway from planet_osm_line where highway in ('motorway','motorway_link','trunk','trunk_link','primary','primary_link','secondary','secondary_link','tertiary','tertiary_link','residential','unclassified') and tunnel in ('yes','true','1') order by z_order) as roads
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="citywalls" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>citywalls</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">(select way from planet_osm_line where "historic"='citywalls') as citywalls</Parameter>
            </Datasource>
    </Layer>
    <Layer name="castle_walls" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>castle_walls</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">(select way from planet_osm_line where "historic"='castle_walls') as castle_walls</Parameter>
            </Datasource>
    </Layer>
    <Layer name="castle_walls" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>castle_walls</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">(select way from planet_osm_polygon where "historic"='castle_walls') as castle_walls</Parameter>
            </Datasource>
    </Layer>
    <Layer name="landuse_overlay" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over" status="0">
        <StyleName>landuse_overlay</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,landuse,leisure
       from planet_osm_polygon
       where (landuse = 'military' or leisure='nature_reserve') and building is null
      ) as landuse_overlay
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="turning_circle-casing" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>turning_circle-casing</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select distinct on (p.way) p.way as way,l.highway as int_tc_type
       from planet_osm_point p
       join planet_osm_line l
        on ST_DWithin(p.way,l.way,0.1)
       join (values
        ('tertiary',1),
        ('unclassified',2),
        ('residential',3),
        ('living_street',4),
        ('service',5)
       ) as v (highway,prio)
        on v.highway=l.highway
       where p.highway='turning_circle'
       order by p.way,v.prio
      ) as turning_circle
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="footbikecycle-tunnels" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over" clear-label-cache="1">
        <StyleName>footbikecycle-tunnels</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,highway,horse,foot,bicycle from planet_osm_line where highway in ('bridleway','footway','cycleway','path') and tunnel in ('yes','true','1') order by z_order) as roads
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="tracks-tunnels" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>tracks-tunnels</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,tracktype from planet_osm_line where highway='track' and tunnel in ('yes','true','1')) as tracks
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="line features" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>cliffs</StyleName>
        <StyleName>barriers</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,barrier,"natural",man_made from planet_osm_line where barrier is not null or "natural" in ('hedge','cliff') or man_made='embankment') as roads
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="polygon barriers" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>barriers_area</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
       (select way,barrier,"natural" from planet_osm_polygon where barrier is not null or "natural"='hedge') as barriers
       </Parameter>
            </Datasource>
    </Layer>
    <Layer name="highway-area-casing" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>highway-area-casing</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,highway,railway from planet_osm_polygon
       where highway in ('residential','unclassified','pedestrian','service','footway','track','path','platform')
          or railway='platform'
       order by z_order,way_area desc) as roads
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="minor-roads-casing" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over" status="0">
        <StyleName>minor-roads-casing-links</StyleName>
        <StyleName>minor-roads-casing</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,highway,
       case when tunnel in ('yes','true','1') then 'yes'::text else tunnel end as tunnel,
       case when service in ('parking_aisle','drive-through','driveway') then 'INT-minor'::text else service end as service
       from planet_osm_line
       where highway in ('motorway','motorway_link','trunk','trunk_link','primary','primary_link','secondary','secondary_link','tertiary','tertiary_link','residential','unclassified','road','service','pedestrian','raceway','living_street')
       order by z_order) as roads
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="highway-area-fill" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>highway-area-fill</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,highway,railway,aeroway from planet_osm_polygon
       where highway in ('residential','unclassified','pedestrian','service','footway','living_street','track','path','platform','services')
          or railway='platform'
          or aeroway in ('runway','taxiway','helipad')
       order by z_order,way_area desc) as roads
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="buildings-lz" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>buildings-lz</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,building,railway,amenity from planet_osm_polygon
       where railway='station' or building='station'
       order by z_order,way_area desc) as buildings
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="turning_circle-fill" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>turning_circle-fill</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select distinct on (p.way) p.way as way,l.highway as int_tc_type
       from planet_osm_point p
       join planet_osm_line l
        on ST_DWithin(p.way,l.way,0.1)
       join (values
        ('tertiary',1),
        ('unclassified',2),
        ('residential',3),
        ('living_street',4),
        ('service',5)
       ) as v (highway,prio)
        on v.highway=l.highway
       where p.highway='turning_circle'
       order by p.way,v.prio
      ) as turning_circle
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="tracks-notunnel-nobridge" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>tracks-notunnel-nobridge</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,tracktype from planet_osm_line where highway='track' and (bridge is null or bridge in ('no','false','0')) and (tunnel is null or tunnel in ('no','false','0'))) as tracks
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="minor-roads-fill" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>minor-roads-fill-links</StyleName>
        <StyleName>minor-roads-fill</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,highway,horse,bicycle,foot,construction,aeroway,
       case when tunnel in ('yes','true','1') then 'yes'::text else tunnel end as tunnel,
       case when bridge in ('yes','true','1','viaduct') then 'yes'::text else bridge end as bridge,
       case when railway in ('spur','siding')
              or (railway='rail' and service in ('spur','siding','yard'))
            then 'spur-siding-yard'::text else railway end as railway,
       case when service in ('parking_aisle','drive-through','driveway') then 'INT-minor'::text else service end as service
       from planet_osm_line
       where highway is not null
          or aeroway in ('runway','taxiway')
          or railway in ('light_rail','narrow_gauge','funicular','rail','subway','tram','spur','siding','platform','disused','abandoned','construction','miniature')
       order by z_order) as roads
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="ferry-routes" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>ferry-routes</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way from planet_osm_line where route='ferry' ) as routes
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="roads" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>roads</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,highway,
       case when tunnel in ('yes','true','1') then 'yes'::text else tunnel end as tunnel,
       case when railway='preserved' and service in ('spur','siding','yard') then 'INT-preserved-ssy'::text else railway end as railway
       from planet_osm_roads
       where highway is not null
          or (railway is not null and railway!='preserved' and (service is null or service not in ('spur','siding','yard')))
          or railway='preserved'
       order by z_order
      ) as roads
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="waterway-bridges" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>waterway-bridges</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">(select way,name from planet_osm_line where waterway='canal' and bridge in ('yes','true','1','aqueduct') order by z_order) as water</Parameter>
            </Datasource>
    </Layer>
    <Layer name="access-pre_bridges" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over" status="0">
        <StyleName>access</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,access,highway,
       case when service in ('parking_aisle','drive-through','driveway') then 'INT-minor'::text end as service
       from planet_osm_line
       where access is not null and highway is not null
         and (bridge is null or bridge not in ('yes','true','1','viaduct'))
      ) as access
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="direction_pre_bridges" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>directions</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,
       case when oneway in ('yes','true','1') then 'yes'::text else oneway end as oneway
       from planet_osm_line
       where oneway is not null
         and (highway is not null or railway is not null or waterway is not null)
         and (bridge is null or bridge not in ('yes','true','1','viaduct'))
      ) as directions
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="bridges_layer0" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>bridges_casing</StyleName>
        <StyleName>bridges_casing2</StyleName>
        <StyleName>bridges_fill</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,highway,aeroway,horse,bicycle,foot,tracktype,
       case when railway in ('spur','siding')
              or (railway='rail' and service in ('spur','siding','yard'))
            then 'INT-spur-siding-yard'::text else railway end as railway
       from planet_osm_line
       where (highway is not null
              or aeroway in ('runway','taxiway')
              or railway in ('light_rail','subway','narrow_gauge','rail','spur','siding','disused','abandoned','construction'))
         and bridge in ('yes','true','1','viaduct')
         and (layer is null or layer = '0')
       order by z_order
      ) as roads
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="bridges_access0" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over" status="0">
        <StyleName>access</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,access,highway,
       case when service in ('parking_aisle','drive-through','driveway') then 'INT-minor'::text end as service
       from planet_osm_line
       where access is not null and highway is not null
         and bridge in ('yes','true','1','viaduct')
         and (layer is null or layer in ('-5','-4','-3','-2','-1','0'))
      ) as access
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="bridges_directions0" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>directions</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,
       case when oneway in ('yes','true','1') then 'yes'::text else oneway end as oneway
       from planet_osm_line
       where oneway is not null
         and (highway is not null or railway is not null or waterway is not null)
         and bridge in ('yes','true','1','viaduct')
         and (layer is null or layer in ('-5','-4','-3','-2','-1','0'))
      ) as directions
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="bridges_layer1" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>bridges_casing</StyleName>
        <StyleName>bridges_casing2</StyleName>
        <StyleName>bridges_fill</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,highway,aeroway,horse,bicycle,foot,tracktype,
       case when railway in ('spur','siding')
              or (railway='rail' and service in ('spur','siding','yard'))
            then 'INT-spur-siding-yard'::text else railway end as railway
       from planet_osm_line
       where (highway is not null
              or aeroway in ('runway','taxiway')
              or railway in ('light_rail','subway','narrow_gauge','rail','spur','siding','disused','abandoned','construction'))
         and bridge in ('yes','true','1','viaduct')
         and layer = '1'
       order by z_order
      ) as roads
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="bridges_access1" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over" status="0">
        <StyleName>access</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,access,highway,
       case when service in ('parking_aisle','drive-through','driveway') then 'INT-minor'::text end as service
       from planet_osm_line
       where access is not null and highway is not null
         and bridge in ('yes','true','1','viaduct')
         and layer = '1'
      ) as access
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="bridges_directions1" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>directions</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,
       case when oneway in ('yes','true','1') then 'yes'::text else oneway end as oneway
       from planet_osm_line
       where oneway is not null
         and (highway is not null or railway is not null or waterway is not null)
         and bridge in ('yes','true','1','viaduct')
         and layer = '1'
      ) as directions
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="bridges_layer2" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>bridges_casing</StyleName>
        <StyleName>bridges_casing2</StyleName>
        <StyleName>bridges_fill</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,highway,aeroway,horse,bicycle,foot,tracktype,
       case when railway in ('spur','siding')
              or (railway='rail' and service in ('spur','siding','yard'))
            then 'INT-spur-siding-yard'::text else railway end as railway
       from planet_osm_line
       where (highway is not null
              or aeroway in ('runway','taxiway')
              or railway in ('light_rail','subway','narrow_gauge','rail','spur','siding','disused','abandoned','construction'))
         and bridge in ('yes','true','1','viaduct')
         and layer = '2'
       order by z_order
      ) as roads
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="bridges_access2" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over" status="0">
        <StyleName>access</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,access,highway,
       case when service in ('parking_aisle','drive-through','driveway') then 'INT-minor'::text end as service
       from planet_osm_line
       where access is not null and highway is not null
         and bridge in ('yes','true','1','viaduct')
         and layer = '2'
      ) as access
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="bridges_directions2" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>directions</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,
       case when oneway in ('yes','true','1') then 'yes'::text else oneway end as oneway
       from planet_osm_line
       where oneway is not null
         and (highway is not null or railway is not null or waterway is not null)
         and bridge in ('yes','true','1','viaduct')
         and layer = '2'
      ) as directions
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="bridges_layer3" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>bridges_casing</StyleName>
        <StyleName>bridges_casing2</StyleName>
        <StyleName>bridges_fill</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,highway,aeroway,horse,bicycle,foot,tracktype,
       case when railway in ('spur','siding')
              or (railway='rail' and service in ('spur','siding','yard'))
            then 'INT-spur-siding-yard'::text else railway end as railway
       from planet_osm_line
       where (highway is not null
              or aeroway in ('runway','taxiway')
              or railway in ('light_rail','subway','narrow_gauge','rail','spur','siding','disused','abandoned','construction'))
         and bridge in ('yes','true','1','viaduct')
         and layer = '3'
       order by z_order
      ) as roads
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="bridges_access3" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over" status="0">
        <StyleName>access</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,access,highway,
       case when service in ('parking_aisle','drive-through','driveway') then 'INT-minor'::text end as service
       from planet_osm_line
       where access is not null and highway is not null
         and bridge in ('yes','true','1','viaduct')
         and layer = '3'
      ) as access
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="bridges_directions3" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>directions</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,
       case when oneway in ('yes','true','1') then 'yes'::text else oneway end as oneway
       from planet_osm_line
       where oneway is not null
         and (highway is not null or railway is not null or waterway is not null)
         and bridge in ('yes','true','1','viaduct')
         and layer = '3'
      ) as directions
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="bridges_layer4" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>bridges_casing</StyleName>
        <StyleName>bridges_casing2</StyleName>
        <StyleName>bridges_fill</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,highway,aeroway,horse,bicycle,foot,tracktype,
       case when railway in ('spur','siding')
              or (railway='rail' and service in ('spur','siding','yard'))
            then 'INT-spur-siding-yard'::text else railway end as railway
       from planet_osm_line
       where (highway is not null
              or aeroway in ('runway','taxiway')
              or railway in ('light_rail','subway','narrow_gauge','rail','spur','siding','disused','abandoned','construction'))
         and bridge in ('yes','true','1','viaduct')
         and layer = '4'
       order by z_order
      ) as roads
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="bridges_access4" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over" status="0">
        <StyleName>access</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,access,highway,
       case when service in ('parking_aisle','drive-through','driveway') then 'INT-minor'::text end as service
       from planet_osm_line
       where access is not null and highway is not null
         and bridge in ('yes','true','1','viaduct')
         and layer = '4'
      ) as access
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="bridges_directions4" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>directions</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,
       case when oneway in ('yes','true','1') then 'yes'::text else oneway end as oneway
       from planet_osm_line
       where oneway is not null
         and (highway is not null or railway is not null or waterway is not null)
         and bridge in ('yes','true','1','viaduct')
         and layer = '4'
      ) as directions
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="bridges_layer5" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>bridges_casing</StyleName>
        <StyleName>bridges_casing2</StyleName>
        <StyleName>bridges_fill</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,highway,aeroway,horse,bicycle,foot,tracktype,
       case when railway in ('spur','siding')
              or (railway='rail' and service in ('spur','siding','yard'))
            then 'INT-spur-siding-yard'::text else railway end as railway
       from planet_osm_line
       where (highway is not null
              or aeroway in ('runway','taxiway')
              or railway in ('light_rail','subway','narrow_gauge','rail','spur','siding','disused','abandoned','construction'))
         and bridge in ('yes','true','1','viaduct')
         and layer = '5'
       order by z_order
      ) as roads
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="bridges_access5" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over" status="0">
        <StyleName>access</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,access,highway,
       case when service in ('parking_aisle','drive-through','driveway') then 'INT-minor'::text end as service
       from planet_osm_line
       where access is not null and highway is not null
         and bridge in ('yes','true','1','viaduct')
         and layer = '5'
      ) as access
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="bridges_directions5" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>directions</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,
       case when oneway in ('yes','true','1') then 'yes'::text else oneway end as oneway
       from planet_osm_line
       where oneway is not null
         and (highway is not null or railway is not null or waterway is not null)
         and bridge in ('yes','true','1','viaduct')
         and layer = '5'
      ) as directions
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="trams" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>trams</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,railway,bridge from planet_osm_line where railway='tram' and (tunnel is null or tunnel not in ('yes','true','1'))) as trams
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="guideways" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>guideways</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way from planet_osm_line where highway='bus_guideway' and (tunnel is null or tunnel not in ('yes','true','1'))) as guideways
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="placenames-large" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>country</StyleName>
	<!-- <StyleName>state</StyleName> -->
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,place,name,ref
       from planet_osm_point
       where place in ('country','state')
      ) as placenames</Parameter>
            </Datasource>
    </Layer>
    <Layer name="placenames-capital" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>capital</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,place,name,ref
       from planet_osm_point
       where place in ('city','metropolis','town') and capital='yes'
      ) as placenames</Parameter>
            </Datasource>
    </Layer>
    <Layer name="placenames-medium" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>city</StyleName>
        <StyleName>town</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,place,name
      from planet_osm_point
      where place in ('city','metropolis','town','large_town','small_town')
        and (capital is null or capital != 'yes')
      ) as placenames</Parameter>
            </Datasource>
    </Layer>
    <Layer name="placenames-small" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>suburb</StyleName>
        <StyleName>village</StyleName>
        <StyleName>hamlet</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,place,name
      from planet_osm_point
      where place in ('suburb','village','large_village','hamlet','locality','isolated_dwelling','farm')
      ) as placenames</Parameter>
            </Datasource>
    </Layer>
    <Layer name="amenity-stations" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>stations</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,name,railway,aerialway,disused
      from planet_osm_point
      where railway in ('station','halt','tram_stop','subway_entrance')
         or aerialway='station'
      ) as stations
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="amenity-stations-poly" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>stations</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,name,railway,aerialway,disused
      from planet_osm_polygon
      where railway in ('station','halt','tram_stop')
         or aerialway='station'
      ) as stations
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="amenity-symbols" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>symbols</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select *
      from planet_osm_point
      where railway='level_crossing'
      ) as symbols</Parameter>
            </Datasource>
    </Layer>
    <Layer name="amenity-symbols-poly" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>symbols</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select *
      from planet_osm_polygon
      where railway='level_crossing'
      ) as symbols</Parameter>
            </Datasource>
    </Layer>
    <Layer name="amenity-points" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>points</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,amenity,highway
      from planet_osm_point
      where amenity in ('bus_stop', 'bus_station')
         or highway = 'bus_stop'
      ) as points</Parameter>
            </Datasource>
    </Layer>
    <Layer name="amenity-points-poly" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>points</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,amenity,highway
      from planet_osm_polygon
      where amenity in ('bus_stop', 'bus_station')
         or highway = 'bus_stop'
      ) as points</Parameter>
            </Datasource>
    </Layer>
    <Layer name="planet roads text osm low zoom" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over" status="0">
        <StyleName>roads-text-low-zoom</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,highway,ref,char_length(ref) as length
       from planet_osm_roads
       where highway in ('motorway','trunk','primary')
         and ref is not null
      ) as roads
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="highway-junctions" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over" status="0">
        <StyleName>highway-junctions</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
     (select way,ref,name
      from planet_osm_point
      where highway='motorway_junction'
     ) as junctions
     </Parameter>
            </Datasource>
    </Layer>
    <Layer name="planet roads text osm" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>roads-text</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,highway,aeroway,name,ref,char_length(ref) as length,
       case when bridge in ('yes','true','1') then 'yes'::text else bridge end as bridge
       from planet_osm_line
       where waterway IS NULL
         and leisure IS NULL
         and landuse IS NULL
         and (name is not null or ((highway is not null or aeroway is not null) and ref is not null))
      ) as roads
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="text" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>text</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,amenity,shop,access,leisure,landuse,man_made,"natural",place,tourism,ele,name,ref,military,aeroway,waterway,historic,'yes'::text as point
       from planet_osm_point
       where amenity is not null
          or shop in ('supermarket','bakery','clothes','fashion','convenience','doityourself','hairdresser','department_store','butcher','car','car_repair','bicycle','florist')
          or leisure is not null
          or landuse is not null
          or tourism is not null
          or "natural" is not null
          or man_made in ('lighthouse','windmill')
          or place='island'
          or military='danger_area'
          or aeroway='gate'
          or waterway='lock'
          or historic in ('memorial','archaeological_site')
      ) as text
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="text-poly" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>text</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,aeroway,shop,access,amenity,leisure,landuse,man_made,"natural",place,tourism,NULL as ele,name,ref,military,waterway,historic,'no'::text as point
       from planet_osm_polygon
       where amenity is not null
          or shop in ('supermarket','bakery','clothes','fashion','convenience','doityourself','hairdresser','department_store', 'butcher','car','car_repair','bicycle')
          or leisure is not null
          or landuse is not null
          or tourism is not null
          or "natural" is not null
          or man_made in ('lighthouse','windmill')
          or place='island'
          or military='danger_area'
          or historic in ('memorial','archaeological_site')
      ) as text
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="area-text" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>area-text</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,way_area,name
       from planet_osm_polygon
       where name is not null
         and (waterway is null or waterway != 'riverbank')
         and place is null
       order by way_area desc
      ) as text
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="interpolation_lines" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>interpolation</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
       (select way from planet_osm_line where "addr:interpolation" is not null) as interpolation
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="housenumbers" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>housenumbers</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,"addr:housenumber" from planet_osm_polygon where "addr:housenumber" is not null and building is not null
       union
       select way,"addr:housenumber" from planet_osm_point where "addr:housenumber" is not null
      ) as housenumbers
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="housenames" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>housenames</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,"addr:housename" from planet_osm_polygon where "addr:housename" is not null and building is not null
       union
       select way,"addr:housename" from planet_osm_point where "addr:housename" is not null
      ) as housenames
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="misc_boundaries" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>boundary</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,way_area,name,boundary from planet_osm_polygon where boundary='national_park' and building is null) as boundary
      </Parameter>
            </Datasource>
    </Layer>
    <Layer name="theme_park" srs="+proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs +over">
        <StyleName>theme_park</StyleName>
        <Datasource>
            &datasource-settings;
            <Parameter name="table">
      (select way,name,tourism from planet_osm_polygon where tourism='theme_park') as theme_park
      </Parameter>
            </Datasource>
    </Layer>

    &placename_labels;
</Map>
